.TH "maxOS::common::InputStreamBuffer< Type >" 3 "Fri Jan 5 2024" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
maxOS::common::InputStreamBuffer< Type > \- Buffers data from a stream and fires an event when a certain element is read\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <inputStream\&.h>\fP
.PP
Inherits \fBmaxOS::common::InputStreamProcessor< Type, Type * >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBInputStreamBuffer\fP (Type event_fire_element, Type termination_element)"
.br
.ti -1c
.RI "\fB~InputStreamBuffer\fP ()"
.br
.ti -1c
.RI "virtual void \fBon_stream_read\fP (Type) override"
.br
.ti -1c
.RI "virtual void \fBon_end_of_stream\fP (\fBGenericInputStream\fP< Type > *) override"
.br
.ti -1c
.RI "void \fBflush\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "Type \fBm_buffer\fP [10240]"
.br
.ti -1c
.RI "int \fBm_offset\fP { 0 }"
.br
.ti -1c
.RI "Type \fBm_event_fire_element\fP"
.br
.ti -1c
.RI "Type \fBm_termination_element\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 

.SS "template<class Type>
.br
class maxOS::common::InputStreamBuffer< Type >"
Buffers data from a stream and fires an event when a certain element is read\&. 


.PP
\fBTemplate Parameters\fP
.RS 4
\fIType\fP The type of data the stream is handling 
.RE
.PP

.PP
Definition at line 80 of file inputStream\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class Type > \fBmaxOS::common::InputStreamBuffer\fP< Type >::\fBInputStreamBuffer\fP (Type event_fire_element, Type termination_element)"
@breif Creates a new \fBInputStreamBuffer\fP
.PP
\fBTemplate Parameters\fP
.RS 4
\fIType\fP The type of data the stream is handling 
.RE
.PP
\fBParameters\fP
.RS 4
\fIevent_fire_element\fP The element to fire the event on 
.br
\fItermination_element\fP The element that signifies the end of the part of the stream to be buffered (e\&.g a newline) 
.RE
.PP

.PP
Definition at line 288 of file inputStream\&.h\&.
.PP
.nf
289         : m_event_fire_element(event_fire_element),
290           m_termination_element(termination_element)
291         {
292 
293         }
.fi
.SS "template<class Type > \fBmaxOS::common::InputStreamBuffer\fP< Type >::~\fBInputStreamBuffer\fP"
@breif Destroys the \fBInputStreamBuffer\fP
.PP
\fBTemplate Parameters\fP
.RS 4
\fIType\fP The type of data the stream is handling 
.RE
.PP

.PP
Definition at line 300 of file inputStream\&.h\&.
.PP
.nf
300                                                                          {
301 
302         }
.fi
.SH "Member Function Documentation"
.PP 
.SS "template<class Type > void \fBmaxOS::common::InputStreamBuffer\fP< Type >::flush"
@breif Flushes the buffer by adding the termination element and firing an on read event (NOTE: The buffer is not cleared after this just overwritten)
.PP
\fBTemplate Parameters\fP
.RS 4
\fIType\fP The type of data the stream is handling 
.RE
.PP

.PP
Definition at line 349 of file inputStream\&.h\&.
.PP
.nf
349                                                                  {
350 
351             // Ensure the buffer is not empty
352             if(m_offset == 0)
353                 return;
354 
355             // Add the termination element to the buffer
356             m_buffer[m_offset] = m_termination_element;
357 
358             // Fire the on read event
359             InputStreamProcessor<Type, Type *>::on_stream_read(m_buffer);
360 
361             // Reset the offset
362             m_offset = 0;
363 
364         }
.fi
.PP
References maxOS::common::InputStreamEventHandler< Type >::on_stream_read()\&.
.SS "template<class Type > void \fBmaxOS::common::InputStreamBuffer\fP< Type >::on_end_of_stream (\fBGenericInputStream\fP< Type > * stream)\fC [override]\fP, \fC [virtual]\fP"
@breif Called when a stream has finished\&. Flushes the buffer if there is any data in it
.PP
\fBTemplate Parameters\fP
.RS 4
\fIType\fP The type of data the stream is handling 
.RE
.PP
\fBParameters\fP
.RS 4
\fIstream\fP The stream that has finished 
.RE
.PP

.PP
Reimplemented from \fBmaxOS::common::InputStreamProcessor< Type, Type * >\fP\&.
.PP
Definition at line 334 of file inputStream\&.h\&.
.PP
.nf
334                                                                                                             {
335 
336             // flush the buffer if there is any data in it
337             if(m_offset > 0)
338                 flush();
339 
340             // Pass the event on to the handlers and remove the stream
341             InputStreamProcessor<Type, Type *>::on_end_of_stream(stream);
342         }
.fi
.PP
References maxOS::common::InputStreamProcessor< Type, ProcessorType >::on_end_of_stream()\&.
.SS "template<class Type > void \fBmaxOS::common::InputStreamBuffer\fP< Type >::on_stream_read (Type read_element)\fC [override]\fP, \fC [virtual]\fP"
@breif Called when data is read from a stream\&. Adds the data to the buffer and checks if the event should be fired
.PP
\fBTemplate Parameters\fP
.RS 4
\fIType\fP 
.RE
.PP
\fBParameters\fP
.RS 4
\fIread_element\fP 
.RE
.PP

.PP
Reimplemented from \fBmaxOS::common::InputStreamEventHandler< Type >\fP\&.
.PP
Definition at line 310 of file inputStream\&.h\&.
.PP
.nf
310                                                                                            {
311 
312             // flush the buffer if the event fire element is read
313             if(read_element == m_event_fire_element){
314                 flush();
315                 return;
316             }
317 
318             // Ensure the buffer is not full
319             if(m_offset >= 10238){
320                 flush();
321             }
322 
323             // Add the element
324             m_buffer[m_offset++] = read_element;
325 
326         }
.fi
.SH "Member Data Documentation"
.PP 
.SS "template<class Type > Type \fBmaxOS::common::InputStreamBuffer\fP< Type >::m_buffer[10240]\fC [protected]\fP"

.PP
Definition at line 83 of file inputStream\&.h\&.
.SS "template<class Type > Type \fBmaxOS::common::InputStreamBuffer\fP< Type >::m_event_fire_element\fC [protected]\fP"

.PP
Definition at line 85 of file inputStream\&.h\&.
.SS "template<class Type > int \fBmaxOS::common::InputStreamBuffer\fP< Type >::m_offset { 0 }\fC [protected]\fP"

.PP
Definition at line 84 of file inputStream\&.h\&.
.SS "template<class Type > Type \fBmaxOS::common::InputStreamBuffer\fP< Type >::m_termination_element\fC [protected]\fP"

.PP
Definition at line 86 of file inputStream\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
