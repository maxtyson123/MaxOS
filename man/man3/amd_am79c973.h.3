.TH "/home/runner/work/MaxOS/MaxOS/kernel/include/drivers/ethernet/amd_am79c973.h" 3 "Sat Mar 29 2025" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/runner/work/MaxOS/MaxOS/kernel/include/drivers/ethernet/amd_am79c973.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdint\&.h>\fP
.br
\fC#include <drivers/ethernet/ethernet\&.h>\fP
.br
\fC#include <hardwarecommunication/pci\&.h>\fP
.br
\fC#include <memory/memorymanagement\&.h>\fP
.br
\fC#include <hardwarecommunication/interrupts\&.h>\fP
.br
\fC#include <hardwarecommunication/port\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBMaxOS::drivers::ethernet::amd_am79c973\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBMaxOS\fP"
.br
.ti -1c
.RI " \fBMaxOS::drivers\fP"
.br
.ti -1c
.RI " \fBMaxOS::drivers::ethernet\fP"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "uint16_t \fBmode\fP"
.br
.ti -1c
.RI "unsigned \fBreserved1\fP"
.br
.ti -1c
.RI "unsigned \fBnumSendBuffers\fP"
.br
.ti -1c
.RI "unsigned \fBreserved2\fP"
.br
.ti -1c
.RI "unsigned \fBnumRecvBuffers\fP"
.br
.ti -1c
.RI "uint64_t \fBphysicalAddress\fP"
.br
.ti -1c
.RI "uint16_t \fBreserved3\fP"
.br
.ti -1c
.RI "uint64_t \fBlogicalAddress\fP"
.br
.ti -1c
.RI "uint32_t \fBrecvBufferDescrAddress\fP"
.br
.ti -1c
.RI "uint32_t \fBsendBufferDescrAddress\fP"
.br
.ti -1c
.RI "uint32_t \fBaddress\fP"
.br
.ti -1c
.RI "uint32_t \fBflags\fP"
.br
.ti -1c
.RI "uint32_t \fBflags2\fP"
.br
.ti -1c
.RI "uint32_t \fBavail\fP"
.br
.in -1c
.SH "Variable Documentation"
.PP 
.SS "uint32_t address"

.PP
Definition at line 3 of file amd_am79c973\&.h\&.
.PP
Referenced by MaxOS::hardwarecommunication::AdvancedConfigurationAndPowerInterface::AdvancedConfigurationAndPowerInterface(), MaxOS::memory::VirtualMemoryManager::allocate(), MaxOS::memory::VirtualMemoryManager::free(), MaxOS::memory::PhysicalMemoryManager::free_frame(), MaxOS::memory::PhysicalMemoryManager::is_anonymous_available(), MaxOS::system::Multiboot::is_reserved(), MaxOS::memory::VirtualMemoryManager::load_physical_into_address_space(), MaxOS::memory::PhysicalMemoryManager::map(), MaxOS::net::InternetProtocolHandler::Parse(), MaxOS::drivers::clock::Clock::read_hardware_clock(), MaxOS::net::AddressResolutionProtocol::RequestMACAddress(), MaxOS::memory::PhysicalMemoryManager::reserve(), MaxOS::net::AddressResolutionProtocol::Resolve(), MaxOS::system::SyscallManager::syscall_allocate_memory(), and MaxOS::system::SyscallManager::syscall_free_memory()\&.
.SS "uint32_t avail"

.PP
Definition at line 6 of file amd_am79c973\&.h\&.
.SS "uint16_t flags"

.PP
Definition at line 4 of file amd_am79c973\&.h\&.
.PP
Referenced by MaxOS::memory::VirtualMemoryManager::allocate(), MaxOS::net::TransmissionControlProtocolHandler::handleInternetProtocolPayload(), MaxOS::memory::PhysicalMemoryManager::identity_map(), MaxOS::memory::VirtualMemoryManager::load_physical_into_address_space(), MaxOS::memory::PhysicalMemoryManager::map(), MaxOS::memory::PhysicalMemoryManager::map_area(), MaxOS::net::TransmissionControlProtocolHandler::sendTransmissionControlProtocolPacket(), and MaxOS::processes::Elf64::to_vmm_flags()\&.
.SS "uint32_t flags2"

.PP
Definition at line 5 of file amd_am79c973\&.h\&.
.SS "uint64_t logicalAddress"

.PP
Definition at line 10 of file amd_am79c973\&.h\&.
.SS "uint16_t mode"

.PP
Definition at line 3 of file amd_am79c973\&.h\&.
.SS "unsigned numRecvBuffers"

.PP
Definition at line 7 of file amd_am79c973\&.h\&.
.SS "unsigned numSendBuffers"

.PP
Definition at line 5 of file amd_am79c973\&.h\&.
.SS "uint64_t physicalAddress"

.PP
Definition at line 8 of file amd_am79c973\&.h\&.
.SS "uint32_t recvBufferDescrAddress"

.PP
Definition at line 11 of file amd_am79c973\&.h\&.
.SS "unsigned reserved1"

.PP
Definition at line 4 of file amd_am79c973\&.h\&.
.SS "unsigned reserved2"

.PP
Definition at line 6 of file amd_am79c973\&.h\&.
.SS "uint16_t reserved3"

.PP
Definition at line 9 of file amd_am79c973\&.h\&.
.SS "uint32_t sendBufferDescrAddress"

.PP
Definition at line 12 of file amd_am79c973\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
