.TH "MaxOS::drivers::video::VideoDriver" 3 "Sat Mar 29 2025" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MaxOS::drivers::video::VideoDriver \- \fBDriver\fP for the video controller, handles the setting of the video mode\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <video\&.h>\fP
.PP
Inherits \fBMaxOS::drivers::Driver\fP, and \fBMaxOS::common::GraphicsContext\fP\&.
.PP
Inherited by \fBMaxOS::drivers::video::VideoElectronicsStandardsAssociation\fP, and \fBMaxOS::drivers::video::VideoGraphicsArray\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBVideoDriver\fP ()"
.br
.ti -1c
.RI "\fB~VideoDriver\fP ()"
.br
.ti -1c
.RI "virtual bool \fBsupports_mode\fP (uint32_t width, uint32_t height, uint32_t color_depth)"
.br
.RI "Check if the video driver supports a certain mode\&. "
.ti -1c
.RI "bool \fBset_mode\fP (uint32_t width, uint32_t height, uint32_t colorDepth)"
.br
.RI "Set the mode of the video driver\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual bool \fBinternal_set_mode\fP (uint32_t width, uint32_t height, uint32_t color_depth)"
.br
.RI "Set the mode of the video driver\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
\fBDriver\fP for the video controller, handles the setting of the video mode\&. 
.PP
Definition at line 22 of file video\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "VideoDriver::VideoDriver ()"

.PP
Definition at line 11 of file video\&.cpp\&.
.PP
.nf
12 : Driver(),
13   GraphicsContext()
14 {
15 
16 }
.fi
.SS "VideoDriver::~VideoDriver ()"

.PP
Definition at line 18 of file video\&.cpp\&.
.PP
.nf
18                           {
19 
20 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "bool VideoDriver::internal_set_mode (uint32_t width, uint32_t height, uint32_t color_depth)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Set the mode of the video driver\&. 
.PP
\fBParameters\fP
.RS 4
\fIwidth\fP The width of the screen 
.br
\fIheight\fP The height of the screen 
.br
\fIcolor_depth\fP The color depth of the screen 
.RE
.PP
\fBReturns\fP
.RS 4
true If the mode was set successfully false otherwise 
.RE
.PP

.PP
Reimplemented in \fBMaxOS::drivers::video::VideoElectronicsStandardsAssociation\fP, and \fBMaxOS::drivers::video::VideoGraphicsArray\fP\&.
.PP
Definition at line 30 of file video\&.cpp\&.
.PP
.nf
30                                                                 {
31     return false;
32 }
.fi
.PP
Referenced by set_mode()\&.
.SS "bool VideoDriver::set_mode (uint32_t width, uint32_t height, uint32_t colorDepth)"

.PP
Set the mode of the video driver\&. 
.PP
\fBParameters\fP
.RS 4
\fIwidth\fP The width of the screen 
.br
\fIheight\fP The height of the screen 
.br
\fIcolor_depth\fP The color depth of the screen 
.RE
.PP
\fBReturns\fP
.RS 4
true If the mode was set successfully (and the screen was updated) false otherwise 
.RE
.PP

.PP
Definition at line 54 of file video\&.cpp\&.
.PP
.nf
54                                                                                {
55 
56     // Check if the mode is supported
57     if(!supports_mode(width, height, colorDepth))
58         return false;
59 
60     // Set the mode
61     if(internal_set_mode(width, height, colorDepth))
62     {
63         this -> m_width = width;
64         this -> m_height = height;
65         this -> m_color_depth = colorDepth;
66         return true;
67     }
68 
69     // If setting the mode failed, return false
70     return false;
71 }
.fi
.PP
References internal_set_mode(), MaxOS::common::GraphicsContext::m_color_depth, MaxOS::common::GraphicsContext::m_height, MaxOS::common::GraphicsContext::m_width, and supports_mode()\&.
.PP
Referenced by kernelMain()\&.
.SS "bool VideoDriver::supports_mode (uint32_t width, uint32_t height, uint32_t color_depth)\fC [virtual]\fP"

.PP
Check if the video driver supports a certain mode\&. 
.PP
\fBParameters\fP
.RS 4
\fIwidth\fP The width of the screen 
.br
\fIheight\fP The height of the screen 
.br
\fIcolor_depth\fP The color depth of the screen 
.RE
.PP
\fBReturns\fP
.RS 4
true If the mode is supported, false otherwise 
.RE
.PP

.PP
Reimplemented in \fBMaxOS::drivers::video::VideoElectronicsStandardsAssociation\fP, and \fBMaxOS::drivers::video::VideoGraphicsArray\fP\&.
.PP
Definition at line 42 of file video\&.cpp\&.
.PP
.nf
42                                                             {
43     return false;
44 }
.fi
.PP
Referenced by set_mode()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
