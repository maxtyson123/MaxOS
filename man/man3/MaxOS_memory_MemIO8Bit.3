.TH "MaxOS::memory::MemIO8Bit" 3 "Sun Oct 13 2024" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MaxOS::memory::MemIO8Bit \- Handles 8 bit memory IO\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <memoryIO\&.h>\fP
.PP
Inherits \fBMaxOS::memory::MemIO\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMemIO8Bit\fP (uint32_t \fBaddress\fP)"
.br
.ti -1c
.RI "\fB~MemIO8Bit\fP ()"
.br
.ti -1c
.RI "virtual void \fBwrite\fP (uint8_t \fBdata\fP)"
.br
.RI "Writes data to the memory address\&. "
.ti -1c
.RI "virtual uint8_t \fBread\fP ()"
.br
.RI "Reads data from the memory address\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Handles 8 bit memory IO\&. 
.PP
Definition at line 30 of file memoryIO\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "MemIO8Bit::MemIO8Bit (uint32_t address)"

.PP
Definition at line 19 of file memoryIO\&.cpp\&.
.PP
.nf
20 : MemIO(address)
21 {
22 }
.fi
.SS "MemIO8Bit::~MemIO8Bit ()"

.PP
Definition at line 24 of file memoryIO\&.cpp\&.
.PP
.nf
24                       {
25 
26 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "uint8_t MemIO8Bit::read ()\fC [virtual]\fP"

.PP
Reads data from the memory address\&. 
.PP
\fBReturns\fP
.RS 4
the data read 
.RE
.PP

.PP
Definition at line 42 of file memoryIO\&.cpp\&.
.PP
.nf
42                        {
43     return *((volatile uint8_t*)(m_address));
44 }
.fi
.PP
References MaxOS::memory::MemIO::m_address\&.
.SS "void MemIO8Bit::write (uint8_t data)\fC [virtual]\fP"

.PP
Writes data to the memory address\&. 
.PP
\fBParameters\fP
.RS 4
\fIdata\fP the data to write 
.RE
.PP

.PP
Definition at line 33 of file memoryIO\&.cpp\&.
.PP
.nf
33                                  {
34     (*((volatile uint8_t*)(m_address)))=(data);
35 }
.fi
.PP
References data, and MaxOS::memory::MemIO::m_address\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
