.TH "MaxOS::String" 3 "Sat Mar 29 2025" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MaxOS::String
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <string\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBString\fP ()"
.br
.ti -1c
.RI "\fBString\fP (char const *\fBstring\fP)"
.br
.ti -1c
.RI "\fBString\fP (\fBString\fP const &other)"
.br
.ti -1c
.RI "\fBString\fP (int value)"
.br
.ti -1c
.RI "\fB~String\fP ()"
.br
.ti -1c
.RI "void \fBcopy\fP (\fBString\fP const &other)"
.br
.RI "Copies the other string\&. "
.ti -1c
.RI "int \fBlength\fP (bool count_ansi=false) const"
.br
.RI "Returns the length of the string\&. "
.ti -1c
.RI "char * \fBc_str\fP ()"
.br
.RI "Returns the string as a c string\&. "
.ti -1c
.RI "const char * \fBc_str\fP () const"
.br
.ti -1c
.RI "\fBString\fP \fBcenter\fP (int width, char fill=' ') const"
.br
.RI "Centers the string in a specified width\&. "
.ti -1c
.RI "bool \fBequals\fP (\fBString\fP const &other) const"
.br
.RI "Checks if one string is equal to another\&. "
.ti -1c
.RI "\fBString\fP & \fBoperator=\fP (\fBString\fP const &other)"
.br
.RI "Sets the string to the other string\&. "
.ti -1c
.RI "\fBString\fP \fBoperator+\fP (\fBString\fP const &other) const"
.br
.RI "Adds the other string to the string\&. "
.ti -1c
.RI "\fBString\fP & \fBoperator+=\fP (\fBString\fP const &other)"
.br
.RI "Adds the other string to the string\&. "
.ti -1c
.RI "\fBString\fP \fBoperator*\fP (int times) const"
.br
.RI "Returns the string repeated a number of times\&. "
.ti -1c
.RI "bool \fBoperator==\fP (\fBString\fP const &other) const"
.br
.RI "Checks if one string is equal to another\&. "
.ti -1c
.RI "bool \fBoperator!=\fP (\fBString\fP const &other) const"
.br
.RI "Checks if one string is not equal to another\&. "
.ti -1c
.RI "bool \fBoperator<\fP (\fBString\fP const &other) const"
.br
.RI "Checks if the sum of the ascii values of the characters in the string is less than the sum of the ascii values of the characters in the other string\&. "
.ti -1c
.RI "bool \fBoperator>\fP (\fBString\fP const &other) const"
.br
.RI "Checks if the sum of the ascii values of the characters in the string is greater than the sum of the ascii values of the characters in the other string\&. "
.ti -1c
.RI "bool \fBoperator<=\fP (\fBString\fP const &other) const"
.br
.RI "Checks if the sum of the ascii values of the characters in the string is less than or equal to the sum of the ascii values of the characters in the other string\&. "
.ti -1c
.RI "bool \fBoperator>=\fP (\fBString\fP const &other) const"
.br
.RI "Checks if the sum of the ascii values of the characters in the string is greater than or equal to the sum of the ascii values of the characters in the other string\&. "
.ti -1c
.RI "char & \fBoperator[]\fP (int index)"
.br
.RI "Returns the character at the specified index\&. "
.ti -1c
.RI "char & \fBoperator[]\fP (int index) const"
.br
.RI "Returns the character at the specified index\&. "
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 12 of file string\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "String::String ()"

.PP
Definition at line 8 of file string\&.cpp\&.
.PP
.nf
9 {
10 
11   // String that only contains the null terminator
12   m_string = new char[1];
13   m_string[0] = '\0';
14   m_length = 1;
15 
16 }
.fi
.SS "String::String (char const * string)"

.PP
Definition at line 18 of file string\&.cpp\&.
.PP
.nf
19 {
20 
21   // Get the length of the string, prevent longer than 10000 because this should mean somthings gone wrong
22   m_length = 0;
23   while (string[m_length] != '\0' && m_length <= 10000)
24           m_length++;
25 
26 
27   // Allocate memory for the string (and null terminator)
28   m_string = new char[m_length + 1];
29 
30   // Copy the string
31   for (int i = 0; i < m_length; i++)
32           m_string[i] = string[i];
33 
34   // If the length is more than 10,000 Replace the end with a warning incase future use actually requires that
35   const char* warning = "MAXOS: String length exceeded 10000 - might be a bug";
36   if(m_length > 10000)
37     for (int i = 0; i < 52; i++)
38       m_string[m_length - 52 + i] = warning[i];
39 
40 
41   // Write the null terminator
42   m_string[m_length] = '\0';
43 }
.fi
.PP
References MaxOS::drivers::peripherals::i\&.
.SS "String::String (\fBString\fP const & other)"

.PP
Definition at line 73 of file string\&.cpp\&.
.PP
.nf
73                                   {
74   // Copy the other string
75   copy(other);
76 }
.fi
.PP
References copy()\&.
.SS "String::String (int value)"

.PP
Definition at line 46 of file string\&.cpp\&.
.PP
.nf
46                         {
47 
48   // The length of the string
49   m_length = 0;
50 
51   // The value of the string
52   int temp = value;
53 
54   // Get the length of the string
55   while (temp != 0) {
56     temp /= 10;
57     m_length++;
58   }
59 
60   // Allocate memory for the string (and null terminator)
61   m_string = new char[m_length + 1];
62 
63   // Copy the string
64   for (int i = m_length - 1; i >= 0; i--) {
65     m_string[i] = (value % 10) + '0';
66     value /= 10;
67   }
68 
69   // Write the null terminator
70   m_string[m_length] = '\0';
71 }
.fi
.PP
References MaxOS::drivers::peripherals::i\&.
.SS "String::~String ()"

.PP
Definition at line 79 of file string\&.cpp\&.
.PP
.nf
79                 {
80 
81   // Free the memory
82   delete[] m_string;
83 
84 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "const char * String::c_str ()"

.PP
Returns the string as a c string\&. 
.PP
\fBReturns\fP
.RS 4
The string as an array of characters 
.RE
.PP

.PP
Definition at line 149 of file string\&.cpp\&.
.PP
.nf
149                     {
150 
151     // Return the string
152     return m_string;
153 
154 }
.fi
.PP
Referenced by MaxOS::processes::Scheduler::add_process(), MaxOS::processes::IPC::free_shared_memory(), MaxOS::system::CPU::PANIC(), MaxOS::system::CPU::prepare_for_panic(), MaxOS::hardwarecommunication::PeripheralComponentInterconnectController::select_drivers(), strcmp(), strncmp(), and MaxOS::processes::Process::~Process()\&.
.SS "const char* MaxOS::String::c_str () const"

.SS "\fBString\fP String::center (int width, char fill = \fC' '\fP) const"

.PP
Centers the string in a specified width\&. 
.PP
\fBParameters\fP
.RS 4
\fIwidth\fP The width of the string 
.br
\fIfill\fP The character to fill the string with 
.RE
.PP
\fBReturns\fP
.RS 4
The centered string 
.RE
.PP

.PP
Definition at line 415 of file string\&.cpp\&.
.PP
.nf
415                                                 {
416 
417     // The centered string
418     String centered;
419 
420     // The length of the string
421     int length = m_length;
422 
423     // The number of characters to add
424     int add = (width - length) / 2;
425 
426     // The length of the centered string
427     centered\&.m_length = width;
428 
429     // Allocate memory for the centered string (and null terminator)
430     centered\&.m_string = new char[width + 1];
431 
432     // Fill the string with the fill character
433     for (int i = 0; i < add; i++)
434         centered\&.m_string[i] = fill;
435 
436     // Copy the string
437     for (int i = 0; i < length; i++)
438         centered\&.m_string[add + i] = m_string[i];
439 
440     // Fill the string with the fill character
441     for (int i = add + length; i < width; i++)
442         centered\&.m_string[i] = fill;
443 
444     // Write the null terminator
445     centered\&.m_string[width] = '\0';
446 
447     // Return the centered string
448     return centered;
449 
450 }
.fi
.PP
References MaxOS::drivers::peripherals::i, and length()\&.
.PP
Referenced by kernelMain()\&.
.SS "void String::copy (\fBString\fP const & other)"

.PP
Copies the other string\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP

.PP
Definition at line 91 of file string\&.cpp\&.
.PP
.nf
91                                      {
92 
93   // Get the length of the string
94   m_length = other\&.length();
95 
96   // Allocate memory for the string (and null terminator)
97   m_string = new char[m_length + 1];
98 
99   // Copy the string
100   for (int i = 0; i < m_length; i++)
101     m_string[i] = other[i];
102 
103   // Write the null terminator
104   m_string[m_length] = '\0';
105 
106 }
.fi
.PP
References MaxOS::drivers::peripherals::i, and length()\&.
.PP
Referenced by operator+=(), operator=(), String(), MaxOS::gui::widgets::Text::update_text(), and MaxOS::gui::widgets::InputBox::update_text()\&.
.SS "bool String::equals (\fBString\fP const & other) const"

.PP
Checks if one string is equal to another\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
True if the strings are equal, false otherwise 
.RE
.PP

.PP
Definition at line 187 of file string\&.cpp\&.
.PP
.nf
187                                              {
188 
189   // Check if the lengths are equal
190   if (m_length != other\&.length())
191     return false;
192 
193   // Check if the characters are equal
194   for (int i = 0; i < m_length; i++)
195     if (m_string[i] != other[i])
196       return false;
197 
198   // The strings are equal
199   return true;
200 
201 }
.fi
.PP
References MaxOS::drivers::peripherals::i, and length()\&.
.PP
Referenced by operator==()\&.
.SS "int String::length (bool count_ansi = \fCfalse\fP) const"

.PP
Returns the length of the string\&. 
.PP
\fBParameters\fP
.RS 4
\fIcount_ansi\fP Whether to count the ansi characters (TODO: Implement - might be bad for performance) 
.RE
.PP
\fBReturns\fP
.RS 4
The length of the string 
.RE
.PP

.PP
Definition at line 174 of file string\&.cpp\&.
.PP
.nf
174                               {
175 
176     // Return the length of the string
177     return m_length;
178 
179 }
.fi
.PP
Referenced by center(), copy(), equals(), MaxOS::gui::Font::get_text_width(), kernelMain(), MaxOS::gui::widgets::InputBox::on_key_down(), operator*(), operator+(), operator+=(), MaxOS::gui::widgets::InputBox::update_text(), and MaxOS::common::OutputStream::write()\&.
.SS "bool String::operator!= (\fBString\fP const & other) const"

.PP
Checks if one string is not equal to another\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
True if the strings are not equal, false otherwise 
.RE
.PP

.PP
Definition at line 221 of file string\&.cpp\&.
.PP
.nf
221                                                    {
222 
223     // If the strings are equal, return false
224     if (*this == other)
225       return false;
226 
227     // The strings are not equal
228     return true;
229 
230 }
.fi
.SS "\fBString\fP String::operator* (int times) const"

.PP
Returns the string repeated a number of times\&. 
.PP
\fBParameters\fP
.RS 4
\fItimes\fP The number of times to repeat the string 
.RE
.PP
\fBReturns\fP
.RS 4
The string repeated a number of times 
.RE
.PP

.PP
Definition at line 384 of file string\&.cpp\&.
.PP
.nf
384                                         {
385 
386     // The repeated string
387     String repeated;
388 
389     // The length of the repeated string
390     int length = m_length * times;
391     repeated\&.m_length = length;
392 
393     // Allocate memory for the repeated string (and null terminator)
394     repeated\&.m_string = new char[length + 1];
395 
396     // Copy the string
397     for (int i = 0; i < times; i++)
398       for (int j = 0; j < m_length; j++)
399         repeated\&.m_string[i * m_length + j] = m_string[j];
400 
401     // Write the null terminator
402     repeated\&.m_string[length] = '\0';
403 
404     // Return the repeated string
405     return repeated;
406 
407 }
.fi
.PP
References MaxOS::drivers::peripherals::i, MaxOS::drivers::peripherals::j, and length()\&.
.SS "\fBString\fP String::operator+ (\fBString\fP const & other) const"

.PP
Adds the other string to the string\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
The concatenated string 
.RE
.PP

.PP
Definition at line 290 of file string\&.cpp\&.
.PP
.nf
290                                                     {
291 
292   // The concatenated string
293   String concatenated;
294 
295   // The length of the concatenated string
296   int length = m_length + other\&.length();
297   concatenated\&.m_length = length;
298 
299   // Allocate memory for the concatenated string (and null terminator)
300   concatenated\&.m_string = new char[length + 1];
301 
302   // Copy the first string
303   for (int i = 0; i < m_length; i++)
304     concatenated\&.m_string[i] = m_string[i];
305 
306   // Copy the second string
307   for(int i = 0; i < other\&.length(); i++)
308     concatenated\&.m_string[m_length + i] = other[i];
309 
310   // Write the null terminator
311   concatenated\&.m_string[length] = '\0';
312 
313   // Return the concatenated string
314   return concatenated;
315 }
.fi
.PP
References MaxOS::drivers::peripherals::i, and length()\&.
.SS "\fBString\fP & String::operator+= (\fBString\fP const & other)"

.PP
Adds the other string to the string\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
The concatenated string 
.RE
.PP

.PP
Definition at line 323 of file string\&.cpp\&.
.PP
.nf
323                                                 {
324 
325     // The concatenated string
326     String concatenated;
327 
328     // The length of the concatenated string
329     int length = m_length + other\&.length();
330     concatenated\&.m_length = length;
331 
332     // Allocate memory for the concatenated string (and null terminator)
333     concatenated\&.m_string = new char[length + 1];
334 
335     // Copy the first string
336     for (int i = 0; i < m_length; i++)
337       concatenated\&.m_string[i] = m_string[i];
338 
339     // Copy the second string
340     for (int i = 0; i < other\&.length(); i++)
341       concatenated\&.m_string[m_length + i] = other[i];
342 
343     // Write the null terminator
344     concatenated\&.m_string[length] = '\0';
345 
346     // Free the old memory
347     delete[] m_string;
348 
349     // Copy the concatenated string
350     copy(concatenated);
351 
352     // Return the concatenated string
353     return *this;
354 }
.fi
.PP
References copy(), MaxOS::drivers::peripherals::i, and length()\&.
.SS "bool String::operator< (\fBString\fP const & other) const"

.PP
Checks if the sum of the ascii values of the characters in the string is less than the sum of the ascii values of the characters in the other string\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
True if the string is less than the other, false otherwise 
.RE
.PP

.PP
Definition at line 238 of file string\&.cpp\&.
.PP
.nf
238                                                   {
239 
240   // If the sum of this is less than the sum of the other, return true
241   return lex_value(*this) < lex_value(other);
242 
243 }
.fi
.SS "bool String::operator<= (\fBString\fP const & other) const"

.PP
Checks if the sum of the ascii values of the characters in the string is less than or equal to the sum of the ascii values of the characters in the other string\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
True if the string is less than or equal to the other, false otherwise 
.RE
.PP

.PP
Definition at line 264 of file string\&.cpp\&.
.PP
.nf
264                                                    {
265 
266   // If the sum of this is less than or equal to the sum of the other, return true
267   return lex_value(*this) <= lex_value(other);
268 
269 }
.fi
.SS "\fBString\fP & String::operator= (\fBString\fP const & other)"

.PP
Sets the string to the other string\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP 
.RE
.PP
\fBReturns\fP
.RS 4
\fBString\fP& The string 
.RE
.PP

.PP
Definition at line 136 of file string\&.cpp\&.
.PP
.nf
136                                                {
137 
138     // Free the old memory
139     delete[] m_string;
140 
141     // Copy the other string
142     copy(other);
143 
144     // Return the string
145     return *this;
146 
147 }
.fi
.PP
References copy()\&.
.SS "bool String::operator== (\fBString\fP const & other) const"

.PP
Checks if one string is equal to another\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
True if the strings are equal, false otherwise 
.RE
.PP

.PP
Definition at line 209 of file string\&.cpp\&.
.PP
.nf
209                                                    {
210 
211     // Check if the strings are equal
212     return equals(other);
213 
214 }
.fi
.PP
References equals()\&.
.SS "bool String::operator> (\fBString\fP const & other) const"

.PP
Checks if the sum of the ascii values of the characters in the string is greater than the sum of the ascii values of the characters in the other string\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
True if the string is greater than the other, false otherwise 
.RE
.PP

.PP
Definition at line 251 of file string\&.cpp\&.
.PP
.nf
251                                                   {
252 
253   // If the sum of this is greater than the sum of the other, return true
254   return lex_value(*this) > lex_value(other);
255 
256 }
.fi
.SS "bool String::operator>= (\fBString\fP const & other) const"

.PP
Checks if the sum of the ascii values of the characters in the string is greater than or equal to the sum of the ascii values of the characters in the other string\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
True if the string is greater than or equal to the other, false otherwise 
.RE
.PP

.PP
Definition at line 277 of file string\&.cpp\&.
.PP
.nf
277                                                    {
278 
279     // If the sum of this is greater than or equal to the sum of the other, return true
280     return lex_value(*this) >= lex_value(other);
281 
282 }
.fi
.SS "char & String::operator[] (int index)"

.PP
Returns the character at the specified index\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP The index of the character 
.RE
.PP
\fBReturns\fP
.RS 4
The character at the specified index 
.RE
.PP

.PP
Definition at line 363 of file string\&.cpp\&.
.PP
.nf
363                                   {
364   return m_string[index];
365 }
.fi
.SS "char & String::operator[] (int index) const"

.PP
Returns the character at the specified index\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP The index of the character 
.RE
.PP
\fBReturns\fP
.RS 4
The character at the specified index 
.RE
.PP

.PP
Definition at line 374 of file string\&.cpp\&.
.PP
.nf
374                                         {
375     return m_string[index];
376 }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
