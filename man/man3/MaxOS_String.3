.TH "MaxOS::String" 3 "Tue Feb 25 2025" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MaxOS::String
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <string\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBString\fP ()"
.br
.ti -1c
.RI "\fBString\fP (char const *\fBstring\fP)"
.br
.ti -1c
.RI "\fBString\fP (\fBString\fP const &other)"
.br
.ti -1c
.RI "\fBString\fP (int value)"
.br
.ti -1c
.RI "\fB~String\fP ()"
.br
.ti -1c
.RI "void \fBcopy\fP (\fBString\fP const &other)"
.br
.RI "Copies the other string\&. "
.ti -1c
.RI "int \fBlength\fP (bool count_ansi=false) const"
.br
.RI "Returns the length of the string\&. "
.ti -1c
.RI "char * \fBc_str\fP ()"
.br
.RI "Returns the string as a c string\&. "
.ti -1c
.RI "const char * \fBc_str\fP () const"
.br
.ti -1c
.RI "\fBString\fP \fBcenter\fP (int width, char fill=' ') const"
.br
.RI "Centers the string in a specified width\&. "
.ti -1c
.RI "\fBString\fP & \fBoperator=\fP (\fBString\fP const &other)"
.br
.RI "Sets the string to the other string\&. "
.ti -1c
.RI "\fBString\fP \fBoperator+\fP (\fBString\fP const &other) const"
.br
.RI "Adds the other string to the string\&. "
.ti -1c
.RI "\fBString\fP & \fBoperator+=\fP (\fBString\fP const &other)"
.br
.RI "Adds the other string to the string\&. "
.ti -1c
.RI "\fBString\fP \fBoperator*\fP (int times) const"
.br
.RI "Returns the string repeated a number of times\&. "
.ti -1c
.RI "bool \fBoperator==\fP (\fBString\fP const &other) const"
.br
.RI "Checks if one string is equal to another\&. "
.ti -1c
.RI "bool \fBoperator!=\fP (\fBString\fP const &other) const"
.br
.RI "Checks if one string is not equal to another\&. "
.ti -1c
.RI "bool \fBoperator<\fP (\fBString\fP const &other) const"
.br
.RI "Checks if the sum of the ascii values of the characters in the string is less than the sum of the ascii values of the characters in the other string\&. "
.ti -1c
.RI "bool \fBoperator>\fP (\fBString\fP const &other) const"
.br
.RI "Checks if the sum of the ascii values of the characters in the string is greater than the sum of the ascii values of the characters in the other string\&. "
.ti -1c
.RI "bool \fBoperator<=\fP (\fBString\fP const &other) const"
.br
.RI "Checks if the sum of the ascii values of the characters in the string is less than or equal to the sum of the ascii values of the characters in the other string\&. "
.ti -1c
.RI "bool \fBoperator>=\fP (\fBString\fP const &other) const"
.br
.RI "Checks if the sum of the ascii values of the characters in the string is greater than or equal to the sum of the ascii values of the characters in the other string\&. "
.ti -1c
.RI "char & \fBoperator[]\fP (int index)"
.br
.RI "Returns the character at the specified index\&. "
.ti -1c
.RI "char & \fBoperator[]\fP (int index) const"
.br
.RI "Returns the character at the specified index\&. "
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 12 of file string\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "String::String ()"

.PP
Definition at line 8 of file string\&.cpp\&.
.PP
.nf
9 {
10 
11   // String that only contains the null terminator
12   m_string = new char[1];
13   m_string[0] = '\0';
14   m_length = 1;
15 
16 }
.fi
.SS "String::String (char const * string)"

.PP
Definition at line 18 of file string\&.cpp\&.
.PP
.nf
19 {
20 
21   // Get the length of the string
22   m_length = 0;
23   while (string[m_length] != '\0')
24           m_length++;
25 
26   // Allocate memory for the string (and null terminator)
27   m_string = new char[m_length + 1];
28 
29   // Copy the string
30   for (int i = 0; i < m_length; i++)
31           m_string[i] = string[i];
32 
33   // Write the null terminator
34   m_string[m_length] = '\0';
35 }
.fi
.PP
References MaxOS::drivers::peripherals::i\&.
.SS "String::String (\fBString\fP const & other)"

.PP
Definition at line 65 of file string\&.cpp\&.
.PP
.nf
65                                   {
66   // Copy the other string
67   copy(other);
68 }
.fi
.PP
References copy()\&.
.SS "String::String (int value)"

.PP
Definition at line 38 of file string\&.cpp\&.
.PP
.nf
38                         {
39 
40   // The length of the string
41   m_length = 0;
42 
43   // The value of the string
44   int temp = value;
45 
46   // Get the length of the string
47   while (temp != 0) {
48     temp /= 10;
49     m_length++;
50   }
51 
52   // Allocate memory for the string (and null terminator)
53   m_string = new char[m_length + 1];
54 
55   // Copy the string
56   for (int i = m_length - 1; i >= 0; i--) {
57     m_string[i] = (value % 10) + '0';
58     value /= 10;
59   }
60 
61   // Write the null terminator
62   m_string[m_length] = '\0';
63 }
.fi
.PP
References MaxOS::drivers::peripherals::i\&.
.SS "String::~String ()"

.PP
Definition at line 71 of file string\&.cpp\&.
.PP
.nf
71                 {
72 
73   // Free the memory
74   delete[] m_string;
75 
76 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "const char * String::c_str ()"

.PP
Returns the string as a c string\&. 
.PP
\fBReturns\fP
.RS 4
The string as an array of characters 
.RE
.PP

.PP
Definition at line 141 of file string\&.cpp\&.
.PP
.nf
141                     {
142 
143     // Return the string
144     return m_string;
145 
146 }
.fi
.PP
Referenced by MaxOS::hardwarecommunication::PeripheralComponentInterconnectController::select_drivers(), strcmp(), and strncmp()\&.
.SS "const char* MaxOS::String::c_str () const"

.SS "\fBString\fP String::center (int width, char fill = \fC' '\fP) const"

.PP
Centers the string in a specified width\&. 
.PP
\fBParameters\fP
.RS 4
\fIwidth\fP The width of the string 
.br
\fIfill\fP The character to fill the string with 
.RE
.PP
\fBReturns\fP
.RS 4
The centered string 
.RE
.PP

.PP
Definition at line 394 of file string\&.cpp\&.
.PP
.nf
394                                                 {
395 
396     // The centered string
397     String centered;
398 
399     // The length of the string
400     int length = m_length;
401 
402     // The number of characters to add
403     int add = (width - length) / 2;
404 
405     // The length of the centered string
406     centered\&.m_length = width;
407 
408     // Allocate memory for the centered string (and null terminator)
409     centered\&.m_string = new char[width + 1];
410 
411     // Fill the string with the fill character
412     for (int i = 0; i < add; i++)
413         centered\&.m_string[i] = fill;
414 
415     // Copy the string
416     for (int i = 0; i < length; i++)
417         centered\&.m_string[add + i] = m_string[i];
418 
419     // Fill the string with the fill character
420     for (int i = add + length; i < width; i++)
421         centered\&.m_string[i] = fill;
422 
423     // Write the null terminator
424     centered\&.m_string[width] = '\0';
425 
426     // Return the centered string
427     return centered;
428 
429 }
.fi
.PP
References MaxOS::drivers::peripherals::i, and length()\&.
.PP
Referenced by kernelMain()\&.
.SS "void String::copy (\fBString\fP const & other)"

.PP
Copies the other string\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP

.PP
Definition at line 83 of file string\&.cpp\&.
.PP
.nf
83                                      {
84 
85   // Get the length of the string
86   m_length = other\&.length();
87 
88   // Allocate memory for the string (and null terminator)
89   m_string = new char[m_length + 1];
90 
91   // Copy the string
92   for (int i = 0; i < m_length; i++)
93     m_string[i] = other[i];
94 
95   // Write the null terminator
96   m_string[m_length] = '\0';
97 
98 }
.fi
.PP
References MaxOS::drivers::peripherals::i, and length()\&.
.PP
Referenced by operator+=(), operator=(), String(), MaxOS::gui::widgets::Text::update_text(), and MaxOS::gui::widgets::InputBox::update_text()\&.
.SS "int String::length (bool count_ansi = \fCfalse\fP) const"

.PP
Returns the length of the string\&. 
.PP
\fBParameters\fP
.RS 4
\fIcount_ansi\fP Whether to count the ansi characters (TODO: Implement - might be bad for performance) 
.RE
.PP
\fBReturns\fP
.RS 4
The length of the string 
.RE
.PP

.PP
Definition at line 166 of file string\&.cpp\&.
.PP
.nf
166                                         {
167 
168     // Return the length of the string
169     return m_length;
170 
171 }
.fi
.PP
Referenced by center(), copy(), MaxOS::gui::Font::get_text_width(), kernelMain(), MaxOS::gui::widgets::InputBox::on_key_down(), operator*(), operator+(), operator+=(), operator==(), MaxOS::gui::widgets::InputBox::update_text(), and MaxOS::common::OutputStream::write()\&.
.SS "bool String::operator!= (\fBString\fP const & other) const"

.PP
Checks if one string is not equal to another\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
True if the strings are not equal, false otherwise 
.RE
.PP

.PP
Definition at line 200 of file string\&.cpp\&.
.PP
.nf
200                                                    {
201 
202     // If the strings are equal, return false
203     if (*this == other)
204       return false;
205 
206     // The strings are not equal
207     return true;
208 
209 }
.fi
.SS "\fBString\fP String::operator* (int times) const"

.PP
Returns the string repeated a number of times\&. 
.PP
\fBParameters\fP
.RS 4
\fItimes\fP The number of times to repeat the string 
.RE
.PP
\fBReturns\fP
.RS 4
The string repeated a number of times 
.RE
.PP

.PP
Definition at line 363 of file string\&.cpp\&.
.PP
.nf
363                                         {
364 
365     // The repeated string
366     String repeated;
367 
368     // The length of the repeated string
369     int length = m_length * times;
370     repeated\&.m_length = length;
371 
372     // Allocate memory for the repeated string (and null terminator)
373     repeated\&.m_string = new char[length + 1];
374 
375     // Copy the string
376     for (int i = 0; i < times; i++)
377       for (int j = 0; j < m_length; j++)
378         repeated\&.m_string[i * m_length + j] = m_string[j];
379 
380     // Write the null terminator
381     repeated\&.m_string[length] = '\0';
382 
383     // Return the repeated string
384     return repeated;
385 
386 }
.fi
.PP
References MaxOS::drivers::peripherals::i, MaxOS::drivers::peripherals::j, and length()\&.
.SS "\fBString\fP String::operator+ (\fBString\fP const & other) const"

.PP
Adds the other string to the string\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
The concatenated string 
.RE
.PP

.PP
Definition at line 269 of file string\&.cpp\&.
.PP
.nf
269                                                     {
270 
271   // The concatenated string
272   String concatenated;
273 
274   // The length of the concatenated string
275   int length = m_length + other\&.length();
276   concatenated\&.m_length = length;
277 
278   // Allocate memory for the concatenated string (and null terminator)
279   concatenated\&.m_string = new char[length + 1];
280 
281   // Copy the first string
282   for (int i = 0; i < m_length; i++)
283     concatenated\&.m_string[i] = m_string[i];
284 
285   // Copy the second string
286   for(int i = 0; i < other\&.length(); i++)
287     concatenated\&.m_string[m_length + i] = other[i];
288 
289   // Write the null terminator
290   concatenated\&.m_string[length] = '\0';
291 
292   // Return the concatenated string
293   return concatenated;
294 }
.fi
.PP
References MaxOS::drivers::peripherals::i, and length()\&.
.SS "\fBString\fP & String::operator+= (\fBString\fP const & other)"

.PP
Adds the other string to the string\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
The concatenated string 
.RE
.PP

.PP
Definition at line 302 of file string\&.cpp\&.
.PP
.nf
302                                                 {
303 
304     // The concatenated string
305     String concatenated;
306 
307     // The length of the concatenated string
308     int length = m_length + other\&.length();
309     concatenated\&.m_length = length;
310 
311     // Allocate memory for the concatenated string (and null terminator)
312     concatenated\&.m_string = new char[length + 1];
313 
314     // Copy the first string
315     for (int i = 0; i < m_length; i++)
316       concatenated\&.m_string[i] = m_string[i];
317 
318     // Copy the second string
319     for (int i = 0; i < other\&.length(); i++)
320       concatenated\&.m_string[m_length + i] = other[i];
321 
322     // Write the null terminator
323     concatenated\&.m_string[length] = '\0';
324 
325     // Free the old memory
326     delete[] m_string;
327 
328     // Copy the concatenated string
329     copy(concatenated);
330 
331     // Return the concatenated string
332     return *this;
333 }
.fi
.PP
References copy(), MaxOS::drivers::peripherals::i, and length()\&.
.SS "bool String::operator< (\fBString\fP const & other) const"

.PP
Checks if the sum of the ascii values of the characters in the string is less than the sum of the ascii values of the characters in the other string\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
True if the string is less than the other, false otherwise 
.RE
.PP

.PP
Definition at line 217 of file string\&.cpp\&.
.PP
.nf
217                                                   {
218 
219   // If the sum of this is less than the sum of the other, return true
220   return lex_value(*this) < lex_value(other);
221 
222 }
.fi
.SS "bool String::operator<= (\fBString\fP const & other) const"

.PP
Checks if the sum of the ascii values of the characters in the string is less than or equal to the sum of the ascii values of the characters in the other string\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
True if the string is less than or equal to the other, false otherwise 
.RE
.PP

.PP
Definition at line 243 of file string\&.cpp\&.
.PP
.nf
243                                                    {
244 
245   // If the sum of this is less than or equal to the sum of the other, return true
246   return lex_value(*this) <= lex_value(other);
247 
248 }
.fi
.SS "\fBString\fP & String::operator= (\fBString\fP const & other)"

.PP
Sets the string to the other string\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP 
.RE
.PP
\fBReturns\fP
.RS 4
\fBString\fP& The string 
.RE
.PP

.PP
Definition at line 128 of file string\&.cpp\&.
.PP
.nf
128                                                {
129 
130     // Free the old memory
131     delete[] m_string;
132 
133     // Copy the other string
134     copy(other);
135 
136     // Return the string
137     return *this;
138 
139 }
.fi
.PP
References copy()\&.
.SS "bool String::operator== (\fBString\fP const & other) const"

.PP
Checks if one string is equal to another\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
True if the strings are equal, false otherwise 
.RE
.PP

.PP
Definition at line 179 of file string\&.cpp\&.
.PP
.nf
179                                                    {
180 
181     // Check if the lengths are equal
182     if (m_length != other\&.length())
183       return false;
184 
185     // Check if the characters are equal
186     for (int i = 0; i < m_length; i++)
187       if (m_string[i] != other[i])
188         return false;
189 
190     // The strings are equal
191     return true;
192 
193 }
.fi
.PP
References MaxOS::drivers::peripherals::i, and length()\&.
.SS "bool String::operator> (\fBString\fP const & other) const"

.PP
Checks if the sum of the ascii values of the characters in the string is greater than the sum of the ascii values of the characters in the other string\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
True if the string is greater than the other, false otherwise 
.RE
.PP

.PP
Definition at line 230 of file string\&.cpp\&.
.PP
.nf
230                                                   {
231 
232   // If the sum of this is greater than the sum of the other, return true
233   return lex_value(*this) > lex_value(other);
234 
235 }
.fi
.SS "bool String::operator>= (\fBString\fP const & other) const"

.PP
Checks if the sum of the ascii values of the characters in the string is greater than or equal to the sum of the ascii values of the characters in the other string\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP The other string 
.RE
.PP
\fBReturns\fP
.RS 4
True if the string is greater than or equal to the other, false otherwise 
.RE
.PP

.PP
Definition at line 256 of file string\&.cpp\&.
.PP
.nf
256                                                    {
257 
258     // If the sum of this is greater than or equal to the sum of the other, return true
259     return lex_value(*this) >= lex_value(other);
260 
261 }
.fi
.SS "char & String::operator[] (int index)"

.PP
Returns the character at the specified index\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP The index of the character 
.RE
.PP
\fBReturns\fP
.RS 4
The character at the specified index 
.RE
.PP

.PP
Definition at line 342 of file string\&.cpp\&.
.PP
.nf
342                                   {
343   return m_string[index];
344 }
.fi
.SS "char & String::operator[] (int index) const"

.PP
Returns the character at the specified index\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP The index of the character 
.RE
.PP
\fBReturns\fP
.RS 4
The character at the specified index 
.RE
.PP

.PP
Definition at line 353 of file string\&.cpp\&.
.PP
.nf
353                                         {
354     return m_string[index];
355 }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
