.TH "/home/runner/work/MaxOS/MaxOS/kernel/include/system/multitasking.h" 3 "Mon Jan 8 2024" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/runner/work/MaxOS/MaxOS/kernel/include/system/multitasking.h
.SH SYNOPSIS
.br
.PP
\fC#include <common/vector\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <system/gdt\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBmaxOS::system::CPUState\fP"
.br
.RI "Stores the state of the CPU registers\&. "
.ti -1c
.RI "class \fBmaxOS::system::Task\fP"
.br
.RI "A task that can be scheduled by the \fBTaskManager\fP\&. "
.ti -1c
.RI "class \fBmaxOS::system::TaskManager\fP"
.br
.RI "Manages the scheduling of m_tasks\&. "
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBmaxOS\fP"
.br
.ti -1c
.RI " \fBmaxOS::system\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "class \fBmaxOS::system::SegmentDescriptor\fP \fBmaxOS::system::__attribute__\fP ((packed))"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "uint32_t \fBeax\fP"
.br
.ti -1c
.RI "uint32_t \fBebx\fP"
.br
.ti -1c
.RI "uint32_t \fBecx\fP"
.br
.ti -1c
.RI "uint32_t \fBedx\fP"
.br
.ti -1c
.RI "uint32_t \fBesi\fP"
.br
.ti -1c
.RI "uint32_t \fBedi\fP"
.br
.ti -1c
.RI "uint32_t \fBebp\fP"
.br
.ti -1c
.RI "uint32_t \fBerror\fP"
.br
.ti -1c
.RI "uint32_t \fBeip\fP"
.br
.ti -1c
.RI "uint32_t \fBcs\fP"
.br
.ti -1c
.RI "uint32_t \fBeflags\fP"
.br
.ti -1c
.RI "uint32_t \fBesp\fP"
.br
.ti -1c
.RI "uint32_t \fBss\fP"
.br
.in -1c
.SH "Variable Documentation"
.PP 
.SS "uint32_t cs"

.PP
Definition at line 16 of file multitasking\&.h\&.
.PP
Referenced by maxOS::system::ThreadManager::create_thread(), and maxOS::system::Task::Task()\&.
.SS "uint32_t eax"

.PP
Definition at line 4 of file multitasking\&.h\&.
.PP
Referenced by maxOS::system::ThreadManager::schedule(), and maxOS::system::Task::Task()\&.
.SS "uint32_t ebp"

.PP
Definition at line 11 of file multitasking\&.h\&.
.PP
Referenced by maxOS::system::Task::Task()\&.
.SS "uint32_t ebx"

.PP
Definition at line 5 of file multitasking\&.h\&.
.PP
Referenced by maxOS::system::Task::Task()\&.
.SS "uint32_t ecx"

.PP
Definition at line 6 of file multitasking\&.h\&.
.PP
Referenced by maxOS::system::Task::Task()\&.
.SS "uint32_t edi"

.PP
Definition at line 10 of file multitasking\&.h\&.
.PP
Referenced by maxOS::system::Task::Task()\&.
.SS "uint32_t edx"

.PP
Definition at line 7 of file multitasking\&.h\&.
.PP
Referenced by maxOS::system::Task::Task()\&.
.SS "uint32_t eflags"

.PP
Definition at line 17 of file multitasking\&.h\&.
.PP
Referenced by maxOS::system::Task::Task()\&.
.SS "uint32_t eip"

.PP
Definition at line 15 of file multitasking\&.h\&.
.PP
Referenced by maxOS::system::Task::Task()\&.
.SS "uint32_t error"

.PP
Definition at line 13 of file multitasking\&.h\&.
.SS "uint32_t esi"

.PP
Definition at line 9 of file multitasking\&.h\&.
.PP
Referenced by maxOS::system::Task::Task()\&.
.SS "uint32_t esp"

.PP
Definition at line 18 of file multitasking\&.h\&.
.PP
Referenced by maxOS::hardwarecommunication::InterruptManager::handle_interrupt_request(), and maxOS::hardwarecommunication::InterruptManager::HandleInterrupt()\&.
.SS "uint32_t ss"

.PP
Definition at line 19 of file multitasking\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
