.TH "MaxOS::drivers::clock::PIT" 3 "Sat Mar 29 2025" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MaxOS::drivers::clock::PIT
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <clock\&.h>\fP
.PP
Inherits \fBMaxOS::hardwarecommunication::InterruptHandler\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPIT\fP (\fBhardwarecommunication::InterruptManager\fP *interrupt_manager, \fBhardwarecommunication::AdvancedProgrammableInterruptController\fP *apic)"
.br
.ti -1c
.RI "\fB~PIT\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBhandle_interrupt\fP () final"
.br
.ti -1c
.RI "uint32_t \fBticks_per_ms\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBhardwarecommunication::Port8Bit\fP \fBm_data_port\fP"
.br
.ti -1c
.RI "\fBhardwarecommunication::Port8Bit\fP \fBm_command_port\fP"
.br
.ti -1c
.RI "\fBhardwarecommunication::LocalAPIC\fP * \fBm_local_apic\fP"
.br
.ti -1c
.RI "\fBhardwarecommunication::IOAPIC\fP * \fBm_io_apic\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 90 of file clock\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "PIT::PIT (\fBhardwarecommunication::InterruptManager\fP * interrupt_manager, \fBhardwarecommunication::AdvancedProgrammableInterruptController\fP * apic)"

.PP
Definition at line 235 of file clock\&.cpp\&.
.PP
.nf
236 : InterruptHandler(0x22, interrupt_manager),
237   m_data_port(0x40),
238   m_command_port(0x43),
239   m_local_apic(apic -> get_local_apic()),
240   m_io_apic(apic -> get_io_apic())
241 {
242 
243 }
.fi
.SS "PIT::~PIT ()"

.PP
Definition at line 245 of file clock\&.cpp\&.
.PP
.nf
245           {
246 
247 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void PIT::handle_interrupt ()\fC [final]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBMaxOS::hardwarecommunication::InterruptHandler\fP\&.
.PP
Definition at line 249 of file clock\&.cpp\&.
.PP
.nf
249                            {
250   m_ticks++;
251 }
.fi
.SS "uint32_t PIT::ticks_per_ms ()\fC [protected]\fP"

.PP
Definition at line 253 of file clock\&.cpp\&.
.PP
.nf
253                            {
254 
255   // Set the redirect for the timer interrupt
256   interrupt_redirect_t redirect = {
257       \&.type = 0x2,
258       \&.index = 0x14,
259       \&.interrupt = 0x22,
260       \&.destination = 0x00,
261       \&.flags = 0x00,
262       \&.mask = true,
263   };
264   m_io_apic -> set_redirect(&redirect);
265 
266   // Configure the PIT clock
267   PITCommand command = {
268       \&.bcd_mode = BINARY,
269       \&.operating_mode = MODE_2,
270       \&.access_mode = LOW_HIGH_BYTE,
271       \&.channel = CHANNEL_0,
272   };
273   m_command_port\&.write(*(uint8_t *)&command);
274 
275   // Set the clock rate to 1 ms;
276   uint16_t rate = 1193182 / 1000;
277   m_data_port\&.write(rate & 0xFF);
278   m_data_port\&.write(rate >> 8);
279 
280   // Stop the clock (write 0 as the initial count)
281   m_local_apic -> write(0x380, 0x00);
282 
283   // Set the divisor to 2
284   m_local_apic -> write(0x3E0, 0x0);
285 
286   // Unmask the PIT interrupt
287   m_io_apic ->set_redirect_mask(redirect\&.index, false);
288 
289   // Calculate the number of ticks in 1 ms
290   uint32_t max = (uint32_t) - 1;
291   m_local_apic -> write(0x380, max);
292 
293   while (m_ticks < s_calibrate_ticks)
294     asm volatile("nop");
295 
296   uint32_t elapsed = max - (m_local_apic -> read(0x390));
297   uint32_t ticks_per_ms = elapsed / s_calibrate_ticks;
298 
299   _kprintf("Ticks per ms: %d\n", ticks_per_ms);
300 
301   // Disable the PIT interrupt again
302   m_local_apic -> write(0x380, 0x00);
303   m_io_apic -> set_redirect_mask(redirect\&.index, true);
304 
305   return ticks_per_ms;
306 
307 }
.fi
.PP
References _kprintf, MaxOS::drivers::clock::BINARY, MaxOS::drivers::clock::CHANNEL_0, command, MaxOS::hardwarecommunication::InterruptRedirect::index, MaxOS::drivers::clock::LOW_HIGH_BYTE, m_command_port, m_data_port, m_io_apic, m_local_apic, MaxOS::drivers::clock::MODE_2, MaxOS::hardwarecommunication::IOAPIC::set_redirect_mask(), MaxOS::hardwarecommunication::InterruptRedirect::type, write, and MaxOS::hardwarecommunication::Port8Bit::write()\&.
.PP
Referenced by MaxOS::drivers::clock::Clock::calibrate()\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBhardwarecommunication::Port8Bit\fP MaxOS::drivers::clock::PIT::m_command_port\fC [protected]\fP"

.PP
Definition at line 102 of file clock\&.h\&.
.PP
Referenced by ticks_per_ms()\&.
.SS "\fBhardwarecommunication::Port8Bit\fP MaxOS::drivers::clock::PIT::m_data_port\fC [protected]\fP"

.PP
Definition at line 101 of file clock\&.h\&.
.PP
Referenced by ticks_per_ms()\&.
.SS "\fBhardwarecommunication::IOAPIC\fP* MaxOS::drivers::clock::PIT::m_io_apic\fC [protected]\fP"

.PP
Definition at line 106 of file clock\&.h\&.
.PP
Referenced by ticks_per_ms()\&.
.SS "\fBhardwarecommunication::LocalAPIC\fP* MaxOS::drivers::clock::PIT::m_local_apic\fC [protected]\fP"

.PP
Definition at line 105 of file clock\&.h\&.
.PP
Referenced by ticks_per_ms()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
