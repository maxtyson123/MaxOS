.TH "MaxOS::common" 3 "Tue Feb 25 2025" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MaxOS::common
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBColour\fP"
.br
.RI "Stores the red, green, blue and alpha values of a colour\&. "
.ti -1c
.RI "class \fBEvent\fP"
.br
.RI "Used to store information about an event, has a type and a return value\&. "
.ti -1c
.RI "class \fBEventHandler\fP"
.br
.RI "Used to handle an event\&. "
.ti -1c
.RI "class \fBEventManager\fP"
.br
.RI "Manages the m_handlers for a type of event, raises events and calls the m_handlers\&. "
.ti -1c
.RI "class \fBGenericInputStream\fP"
.br
.RI "Manages the connection of a stream to handlers\&. "
.ti -1c
.RI "class \fBGenericOutputStream\fP"
.br
.RI "A stream that can be written to\&. "
.ti -1c
.RI "class \fBGraphicsContext\fP"
.br
.RI "Draws pixels to the screen, and handles drawing lines, rectangles and circles\&. "
.ti -1c
.RI "class \fBInputStream\fP"
.br
.RI "A stream that handles strings\&. "
.ti -1c
.RI "class \fBInputStreamBuffer\fP"
.br
.RI "Buffers data from a stream and fires an event when a certain element is read\&. "
.ti -1c
.RI "class \fBInputStreamEventHandler\fP"
.br
.RI "Handles read and end of stream events from a set of streams\&. "
.ti -1c
.RI "class \fBInputStreamProcessor\fP"
.br
.RI "Converts one stream data type into another\&. "
.ti -1c
.RI "class \fBInputStreamSocket\fP"
.br
.RI "Passes read events on to the handlers\&. "
.ti -1c
.RI "class \fBMap\fP"
.br
.RI "A list of key-value pairs\&. "
.ti -1c
.RI "class \fBMapIterationHandler\fP"
.br
.RI "Handles iteration of a map\&. "
.ti -1c
.RI "class \fBOutputStream\fP"
.br
.RI "A stream that strings can be written to\&. "
.ti -1c
.RI "class \fBPair\fP"
.br
.RI "A pair of two objects\&. "
.ti -1c
.RI "class \fBRectangle\fP"
.br
.RI "Stores the left, top, width and height of a rectangle\&. "
.ti -1c
.RI "struct \fBTime\fP"
.br
.RI "Stores the year, month, day, hour, minute and second of a time\&. "
.ti -1c
.RI "class \fBVector\fP"
.br
.RI "Dynamically stores an array of elements\&. "
.ti -1c
.RI "class \fBVectorIterationHandler\fP"
.br
.RI "Handles the iteration of a \fBVector\fP providing read and end of stream functions\&. "
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBPair\fP< int32_t, int32_t > \fBCoordinates\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBANSIColour\fP { \fBFG_Black\fP = 0, \fBFG_Red\fP = 1, \fBFG_Green\fP = 2, \fBFG_Yellow\fP = 3, \fBFG_Blue\fP = 4, \fBFG_Magenta\fP = 5, \fBFG_Cyan\fP = 6, \fBFG_White\fP = 7, \fBBG_Black\fP = 8, \fBBG_Red\fP = 9, \fBBG_Green\fP = 10, \fBBG_Yellow\fP = 11, \fBBG_Blue\fP = 12, \fBBG_Magenta\fP = 13, \fBBG_Cyan\fP = 14, \fBBG_White\fP = 15, \fBReset\fP = 16 }"
.br
.ti -1c
.RI "enum \fBConsoleColour\fP { \fBUnititialised\fP = 0xFF, \fBBlack\fP = 0x00, \fBBlue\fP = 0x01, \fBGreen\fP = 0x02, \fBCyan\fP = 0x03, \fBRed\fP = 0x04, \fBMagenta\fP = 0x05, \fBBrown\fP = 0x06, \fBLightGrey\fP = 0x07, \fBDarkGrey\fP = 0x08, \fBLightBlue\fP = 0x09, \fBLightGreen\fP = 0x0A, \fBLightCyan\fP = 0x0B, \fBLightRed\fP = 0x0C, \fBLightMagenta\fP = 0x0D, \fBYellow\fP = 0x0E, \fBWhite\fP = 0x0F }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<class Type > void \fBoperator>>\fP (\fBGenericInputStream\fP< Type > &\fBsource\fP, \fBInputStreamEventHandler\fP< Type > &inputStreamEventHandler)"
.br
.ti -1c
.RI "template<class Type , class ProcessorType > \fBGenericInputStream\fP< ProcessorType > & \fBoperator>>\fP (\fBGenericInputStream\fP< Type > &\fBsource\fP, \fBInputStreamProcessor\fP< Type, ProcessorType > &processor)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const char *const \fBANSI_COLOURS\fP []"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef \fBPair\fP<int32_t, int32_t> \fBMaxOS::common::Coordinates\fP"

.PP
Definition at line 15 of file coordinates\&.h\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBMaxOS::common::ANSIColour\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFG_Black \fP\fP
.TP
\fB\fIFG_Red \fP\fP
.TP
\fB\fIFG_Green \fP\fP
.TP
\fB\fIFG_Yellow \fP\fP
.TP
\fB\fIFG_Blue \fP\fP
.TP
\fB\fIFG_Magenta \fP\fP
.TP
\fB\fIFG_Cyan \fP\fP
.TP
\fB\fIFG_White \fP\fP
.TP
\fB\fIBG_Black \fP\fP
.TP
\fB\fIBG_Red \fP\fP
.TP
\fB\fIBG_Green \fP\fP
.TP
\fB\fIBG_Yellow \fP\fP
.TP
\fB\fIBG_Blue \fP\fP
.TP
\fB\fIBG_Magenta \fP\fP
.TP
\fB\fIBG_Cyan \fP\fP
.TP
\fB\fIBG_White \fP\fP
.TP
\fB\fIReset \fP\fP
.PP
Definition at line 36 of file colour\&.h\&.
.PP
.nf
37       {
38         FG_Black   = 0,
39         FG_Red     = 1,
40         FG_Green   = 2,
41         FG_Yellow  = 3,
42         FG_Blue    = 4,
43         FG_Magenta = 5,
44         FG_Cyan    = 6,
45         FG_White   = 7,
46         BG_Black   = 8,
47         BG_Red     = 9,
48         BG_Green   = 10,
49         BG_Yellow  = 11,
50         BG_Blue    = 12,
51         BG_Magenta = 13,
52         BG_Cyan    = 14,
53         BG_White   = 15,
54         Reset      = 16
55       };
.fi
.SS "enum \fBMaxOS::common::ConsoleColour\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIUnititialised \fP\fP
.TP
\fB\fIBlack \fP\fP
.TP
\fB\fIBlue \fP\fP
.TP
\fB\fIGreen \fP\fP
.TP
\fB\fICyan \fP\fP
.TP
\fB\fIRed \fP\fP
.TP
\fB\fIMagenta \fP\fP
.TP
\fB\fIBrown \fP\fP
.TP
\fB\fILightGrey \fP\fP
.TP
\fB\fIDarkGrey \fP\fP
.TP
\fB\fILightBlue \fP\fP
.TP
\fB\fILightGreen \fP\fP
.TP
\fB\fILightCyan \fP\fP
.TP
\fB\fILightRed \fP\fP
.TP
\fB\fILightMagenta \fP\fP
.TP
\fB\fIYellow \fP\fP
.TP
\fB\fIWhite \fP\fP
.PP
Definition at line 57 of file colour\&.h\&.
.PP
.nf
58       {
59         Unititialised = 0xFF,
60         Black        = 0x00,
61         Blue         = 0x01,
62         Green        = 0x02,
63         Cyan         = 0x03,
64         Red          = 0x04,
65         Magenta      = 0x05,
66         Brown        = 0x06,
67         LightGrey    = 0x07,
68         DarkGrey     = 0x08,
69         LightBlue    = 0x09,
70         LightGreen   = 0x0A,
71         LightCyan    = 0x0B,
72         LightRed     = 0x0C,
73         LightMagenta = 0x0D,
74         Yellow       = 0x0E,
75         White        = 0x0F
76       };
.fi
.SH "Function Documentation"
.PP 
.SS "template<class Type > void MaxOS::common::operator>> (\fBGenericInputStream\fP< Type > & source, \fBInputStreamEventHandler\fP< Type > & inputStreamEventHandler)"

.SS "template<class Type , class ProcessorType > \fBGenericInputStream\fP<ProcessorType>& MaxOS::common::operator>> (\fBGenericInputStream\fP< Type > & source, \fBInputStreamProcessor\fP< Type, ProcessorType > & processor)"

.SH "Variable Documentation"
.PP 
.SS "const char* const MaxOS::common::ANSI_COLOURS[]"
\fBInitial value:\fP
.PP
.nf
= {
        "\033[0;30m", 
        "\033[0;31m", 
        "\033[0;32m", 
        "\033[0;33m", 
        "\033[0;34m", 
        "\033[0;35m", 
        "\033[0;36m", 
        "\033[0;37m", 
        "\033[0;40m", 
        "\033[0;41m", 
        "\033[0;42m", 
        "\033[0;43m", 
        "\033[0;44m", 
        "\033[0;45m", 
        "\033[0;46m", 
        "\033[0;47m",  
        "\033[0m"     
      }
.fi
.PP
Definition at line 16 of file colour\&.h\&.
.PP
Referenced by kernelMain()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
