.TH "maxOS::system::SyscallHandler" 3 "Sat Jan 6 2024" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
maxOS::system::SyscallHandler \- Handles system calls\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <syscalls\&.h>\fP
.PP
Inherits \fBmaxOS::hardwarecommunication::InterruptHandler\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSyscallHandler\fP (\fBhardwarecommunication::InterruptManager\fP *interrupt_manager, uint8_t interrupt_number)"
.br
.RI "\fBHandler\fP/// "
.ti -1c
.RI "\fB~SyscallHandler\fP ()"
.br
.ti -1c
.RI "virtual void \fBhandle_interrupt\fP ()"
.br
.RI "Handles the interrupt for a system call\&. "
.in -1c
.SH "Detailed Description"
.PP 
Handles system calls\&. 
.PP
Definition at line 19 of file syscalls\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SyscallHandler::SyscallHandler (\fBhardwarecommunication::InterruptManager\fP * interrupt_manager, uint8_t interrupt_number)"

.PP
\fBHandler\fP/// 
.PP
Definition at line 14 of file syscalls\&.cpp\&.
.PP
.nf
15 :    InterruptHandler(interrupt_number + interrupt_manager->hardware_interrupt_offset(), interrupt_manager)
16 {
17 }
.fi
.SS "SyscallHandler::~SyscallHandler ()"

.PP
Definition at line 19 of file syscalls\&.cpp\&.
.PP
.nf
20 {
21 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void SyscallHandler::handle_interrupt ()\fC [virtual]\fP"

.PP
Handles the interrupt for a system call\&. 
.PP
\fBParameters\fP
.RS 4
\fIesp\fP The stack frame 
.RE
.PP

.PP
Reimplemented from \fBmaxOS::hardwarecommunication::InterruptHandler\fP\&.
.PP
Definition at line 28 of file syscalls\&.cpp\&.
.PP
.nf
29 {
30     // TODO: Get the CPU state from the stack frame (maybe make a cpu driver to get the state)
31     return;
32 }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
