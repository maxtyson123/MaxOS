.TH "/home/runner/work/MaxOS/MaxOS/kernel/src/memory/memorymanagement.cpp" 3 "Sun Oct 13 2024" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/runner/work/MaxOS/MaxOS/kernel/src/memory/memorymanagement.cpp
.SH SYNOPSIS
.br
.PP
\fC#include <memory/memorymanagement\&.h>\fP
.br
\fC#include <common/kprint\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void * \fBoperator new\fP (size_t \fBsize\fP)  throw ()"
.br
.ti -1c
.RI "void * \fBoperator new[]\fP (size_t \fBsize\fP)  throw ()"
.br
.ti -1c
.RI "void * \fBoperator new\fP (size_t, void *pointer)"
.br
.ti -1c
.RI "void * \fBoperator new[]\fP (size_t, void *pointer)"
.br
.ti -1c
.RI "void \fBoperator delete\fP (void *pointer)"
.br
.ti -1c
.RI "void \fBoperator delete[]\fP (void *pointer)"
.br
.ti -1c
.RI "void \fBoperator delete\fP (void *pointer, size_t)"
.br
.ti -1c
.RI "void \fBoperator delete[]\fP (void *pointer, size_t)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void operator delete (void * pointer)"

.PP
Definition at line 307 of file memorymanagement\&.cpp\&.
.PP
.nf
307                                    {
308 
309     // Use the memory manager to free the memory
310     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
311         return MaxOS::memory::MemoryManager::s_active_memory_manager-> free(pointer);
312 
313 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager\&.
.SS "void operator delete (void * pointer, size_t)"

.PP
Definition at line 324 of file memorymanagement\&.cpp\&.
.PP
.nf
324                                            {
325 
326     // Use the memory manager to free the memory
327     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
328         return MaxOS::memory::MemoryManager::s_active_memory_manager-> free(pointer);
329 
330 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager\&.
.SS "void operator delete[] (void * pointer)"

.PP
Definition at line 315 of file memorymanagement\&.cpp\&.
.PP
.nf
315                                      {
316 
317     // Use the memory manager to free the memory
318     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
319         return MaxOS::memory::MemoryManager::s_active_memory_manager-> free(pointer);
320 
321 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager\&.
.SS "void operator delete[] (void * pointer, size_t)"

.PP
Definition at line 332 of file memorymanagement\&.cpp\&.
.PP
.nf
332                                              {
333 
334     // Use the memory manager to free the memory
335     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
336         return MaxOS::memory::MemoryManager::s_active_memory_manager-> free(pointer);
337 
338 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager\&.
.SS "void* operator new (size_t size)"

.PP
Definition at line 276 of file memorymanagement\&.cpp\&.
.PP
.nf
276                                        {
277 
278     // Use the memory manager to allocate the memory
279     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
280         return MaxOS::memory::MemoryManager::s_active_memory_manager-> malloc(size);
281 
282     return 0;
283 
284 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager, and size\&.
.SS "void* operator new (size_t, void * pointer)"

.PP
Definition at line 296 of file memorymanagement\&.cpp\&.
.PP
.nf
296                                          {
297 
298     return pointer;
299 
300 }
.fi
.SS "void* operator new[] (size_t size)"

.PP
Definition at line 286 of file memorymanagement\&.cpp\&.
.PP
.nf
286                                          {
287 
288     // Use the memory manager to allocate the memory
289     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
290         return MaxOS::memory::MemoryManager::s_active_memory_manager-> malloc(size);
291 
292     return 0;
293 
294 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager, and size\&.
.SS "void* operator new[] (size_t, void * pointer)"

.PP
Definition at line 301 of file memorymanagement\&.cpp\&.
.PP
.nf
301                                            {
302 
303     return pointer;
304 
305 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
