.TH "/home/runner/work/MaxOS/MaxOS/kernel/src/memory/memorymanagement.cpp" 3 "Mon Jan 15 2024" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/runner/work/MaxOS/MaxOS/kernel/src/memory/memorymanagement.cpp
.SH SYNOPSIS
.br
.PP
\fC#include <memory/memorymanagement\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void * \fBoperator new\fP (size_t \fBsize\fP)  throw ()"
.br
.ti -1c
.RI "void * \fBoperator new[]\fP (size_t \fBsize\fP)  throw ()"
.br
.ti -1c
.RI "void * \fBoperator new\fP (size_t, void *pointer)"
.br
.ti -1c
.RI "void * \fBoperator new[]\fP (size_t, void *pointer)"
.br
.ti -1c
.RI "void \fBoperator delete\fP (void *pointer)"
.br
.ti -1c
.RI "void \fBoperator delete[]\fP (void *pointer)"
.br
.ti -1c
.RI "void \fBoperator delete\fP (void *pointer, size_t)"
.br
.ti -1c
.RI "void \fBoperator delete[]\fP (void *pointer, size_t)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void operator delete (void * pointer)"

.PP
Definition at line 197 of file memorymanagement\&.cpp\&.
.PP
.nf
197                                    {
198 
199     // Use the memory manager to free the memory
200     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
201         return MaxOS::memory::MemoryManager::s_active_memory_manager-> free(pointer);
202 
203 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager\&.
.SS "void operator delete (void * pointer, size_t)"

.PP
Definition at line 214 of file memorymanagement\&.cpp\&.
.PP
.nf
214                                            {
215 
216     // Use the memory manager to free the memory
217     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
218         return MaxOS::memory::MemoryManager::s_active_memory_manager-> free(pointer);
219 
220 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager\&.
.SS "void operator delete[] (void * pointer)"

.PP
Definition at line 205 of file memorymanagement\&.cpp\&.
.PP
.nf
205                                      {
206 
207     // Use the memory manager to free the memory
208     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
209         return MaxOS::memory::MemoryManager::s_active_memory_manager-> free(pointer);
210 
211 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager\&.
.SS "void operator delete[] (void * pointer, size_t)"

.PP
Definition at line 222 of file memorymanagement\&.cpp\&.
.PP
.nf
222                                              {
223 
224     // Use the memory manager to free the memory
225     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
226         return MaxOS::memory::MemoryManager::s_active_memory_manager-> free(pointer);
227 
228 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager\&.
.SS "void* operator new (size_t size)"

.PP
Definition at line 166 of file memorymanagement\&.cpp\&.
.PP
.nf
166                                        {
167 
168     // Use the memory manager to allocate the memory
169     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
170         return MaxOS::memory::MemoryManager::s_active_memory_manager-> malloc(size);
171 
172     return 0;
173 
174 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager, and size\&.
.SS "void* operator new (size_t, void * pointer)"

.PP
Definition at line 186 of file memorymanagement\&.cpp\&.
.PP
.nf
186                                          {
187 
188     return pointer;
189 
190 }
.fi
.SS "void* operator new[] (size_t size)"

.PP
Definition at line 176 of file memorymanagement\&.cpp\&.
.PP
.nf
176                                          {
177 
178     // Use the memory manager to allocate the memory
179     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
180         return MaxOS::memory::MemoryManager::s_active_memory_manager-> malloc(size);
181 
182     return 0;
183 
184 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager, and size\&.
.SS "void* operator new[] (size_t, void * pointer)"

.PP
Definition at line 191 of file memorymanagement\&.cpp\&.
.PP
.nf
191                                            {
192 
193     return pointer;
194 
195 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
