.TH "/home/runner/work/MaxOS/MaxOS/kernel/src/memory/memorymanagement.cpp" 3 "Mon Jan 29 2024" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/runner/work/MaxOS/MaxOS/kernel/src/memory/memorymanagement.cpp
.SH SYNOPSIS
.br
.PP
\fC#include <memory/memorymanagement\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void * \fBoperator new\fP (size_t \fBsize\fP)  throw ()"
.br
.ti -1c
.RI "void * \fBoperator new[]\fP (size_t \fBsize\fP)  throw ()"
.br
.ti -1c
.RI "void * \fBoperator new\fP (size_t, void *pointer)"
.br
.ti -1c
.RI "void * \fBoperator new[]\fP (size_t, void *pointer)"
.br
.ti -1c
.RI "void \fBoperator delete\fP (void *pointer)"
.br
.ti -1c
.RI "void \fBoperator delete[]\fP (void *pointer)"
.br
.ti -1c
.RI "void \fBoperator delete\fP (void *pointer, size_t)"
.br
.ti -1c
.RI "void \fBoperator delete[]\fP (void *pointer, size_t)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void operator delete (void * pointer)"

.PP
Definition at line 204 of file memorymanagement\&.cpp\&.
.PP
.nf
204                                    {
205 
206     // Use the memory manager to free the memory
207     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
208         return MaxOS::memory::MemoryManager::s_active_memory_manager-> free(pointer);
209 
210 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager\&.
.SS "void operator delete (void * pointer, size_t)"

.PP
Definition at line 221 of file memorymanagement\&.cpp\&.
.PP
.nf
221                                            {
222 
223     // Use the memory manager to free the memory
224     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
225         return MaxOS::memory::MemoryManager::s_active_memory_manager-> free(pointer);
226 
227 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager\&.
.SS "void operator delete[] (void * pointer)"

.PP
Definition at line 212 of file memorymanagement\&.cpp\&.
.PP
.nf
212                                      {
213 
214     // Use the memory manager to free the memory
215     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
216         return MaxOS::memory::MemoryManager::s_active_memory_manager-> free(pointer);
217 
218 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager\&.
.SS "void operator delete[] (void * pointer, size_t)"

.PP
Definition at line 229 of file memorymanagement\&.cpp\&.
.PP
.nf
229                                              {
230 
231     // Use the memory manager to free the memory
232     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
233         return MaxOS::memory::MemoryManager::s_active_memory_manager-> free(pointer);
234 
235 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager\&.
.SS "void* operator new (size_t size)"

.PP
Definition at line 173 of file memorymanagement\&.cpp\&.
.PP
.nf
173                                        {
174 
175     // Use the memory manager to allocate the memory
176     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
177         return MaxOS::memory::MemoryManager::s_active_memory_manager-> malloc(size);
178 
179     return 0;
180 
181 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager, and size\&.
.SS "void* operator new (size_t, void * pointer)"

.PP
Definition at line 193 of file memorymanagement\&.cpp\&.
.PP
.nf
193                                          {
194 
195     return pointer;
196 
197 }
.fi
.SS "void* operator new[] (size_t size)"

.PP
Definition at line 183 of file memorymanagement\&.cpp\&.
.PP
.nf
183                                          {
184 
185     // Use the memory manager to allocate the memory
186     if(MaxOS::memory::MemoryManager::s_active_memory_manager != 0)
187         return MaxOS::memory::MemoryManager::s_active_memory_manager-> malloc(size);
188 
189     return 0;
190 
191 }
.fi
.PP
References MaxOS::memory::MemoryManager::s_active_memory_manager, and size\&.
.SS "void* operator new[] (size_t, void * pointer)"

.PP
Definition at line 198 of file memorymanagement\&.cpp\&.
.PP
.nf
198                                            {
199 
200     return pointer;
201 
202 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
