.TH "/home/runner/work/MaxOS/MaxOS/kernel/include/net/ipv4.h" 3 "Sat Mar 29 2025" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/runner/work/MaxOS/MaxOS/kernel/include/net/ipv4.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdint\&.h>\fP
.br
\fC#include <net/ethernetframe\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBMaxOS::net::InternetProtocolV4Header\fP"
.br
.ti -1c
.RI "class \fBMaxOS::net::InternetProtocolAddressResolver\fP"
.br
.ti -1c
.RI "class \fBMaxOS::net::InternetProtocolPayloadHandler\fP"
.br
.ti -1c
.RI "class \fBMaxOS::net::InternetProtocolHandler\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBMaxOS\fP"
.br
.ti -1c
.RI " \fBMaxOS::net\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef uint32_t \fBMaxOS::net::InternetProtocolAddress\fP"
.br
.ti -1c
.RI "typedef uint32_t \fBMaxOS::net::SubnetMask\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "struct \fBMaxOS::net::AddressResolutionProtocolMessage\fP \fBMaxOS::net::__attribute__\fP ((packed))"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "uint8_t \fBheaderLength\fP"
.br
.ti -1c
.RI "uint8_t \fBversion\fP"
.br
.ti -1c
.RI "uint8_t \fBtypeOfService\fP"
.br
.ti -1c
.RI "uint16_t \fBtotalLength\fP"
.br
.ti -1c
.RI "uint16_t \fBidentifier\fP"
.br
.ti -1c
.RI "uint16_t \fBflagsAndOffset\fP"
.br
.ti -1c
.RI "uint8_t \fBtimeToLive\fP"
.br
.ti -1c
.RI "uint8_t \fBprotocol\fP"
.br
.ti -1c
.RI "uint16_t \fBchecksum\fP"
.br
.ti -1c
.RI "uint32_t \fBsourceIP\fP"
.br
.ti -1c
.RI "uint32_t \fBdestinationIP\fP"
.br
.in -1c
.SH "Variable Documentation"
.PP 
.SS "uint16_t checksum"

.PP
Definition at line 27 of file ipv4\&.h\&.
.SS "uint32_t destinationIP"

.PP
Definition at line 30 of file ipv4\&.h\&.
.PP
Referenced by MaxOS::net::InternetProtocolHandler::handleEthernetframePayload(), MaxOS::net::UserDatagramProtocolHandler::handleInternetProtocolPayload(), MaxOS::net::TransmissionControlProtocolHandler::handleInternetProtocolPayload(), MaxOS::net::InternetProtocolPayloadHandler::Send(), and MaxOS::net::InternetProtocolHandler::sendInternetProtocolPacket()\&.
.SS "uint16_t flagsAndOffset"

.PP
Definition at line 23 of file ipv4\&.h\&.
.PP
Referenced by MaxOS::net::InternetProtocolHandler::sendInternetProtocolPacket()\&.
.SS "uint8_t headerLength"

.PP
Definition at line 17 of file ipv4\&.h\&.
.PP
Referenced by MaxOS::net::InternetProtocolHandler::handleEthernetframePayload(), and MaxOS::net::InternetProtocolHandler::sendInternetProtocolPacket()\&.
.SS "uint16_t identifier"

.PP
Definition at line 22 of file ipv4\&.h\&.
.PP
Referenced by MaxOS::net::InternetProtocolHandler::sendInternetProtocolPacket()\&.
.SS "uint8_t protocol"

.PP
Definition at line 26 of file ipv4\&.h\&.
.SS "uint32_t sourceIP"

.PP
Definition at line 29 of file ipv4\&.h\&.
.PP
Referenced by MaxOS::net::InternetProtocolHandler::handleEthernetframePayload(), MaxOS::net::UserDatagramProtocolHandler::handleInternetProtocolPayload(), MaxOS::net::TransmissionControlProtocolHandler::handleInternetProtocolPayload(), and MaxOS::net::InternetProtocolHandler::sendInternetProtocolPacket()\&.
.SS "uint8_t timeToLive"

.PP
Definition at line 25 of file ipv4\&.h\&.
.PP
Referenced by MaxOS::net::InternetProtocolHandler::handleEthernetframePayload(), and MaxOS::net::InternetProtocolHandler::sendInternetProtocolPacket()\&.
.SS "uint16_t totalLength"

.PP
Definition at line 20 of file ipv4\&.h\&.
.PP
Referenced by MaxOS::net::InternetProtocolHandler::handleEthernetframePayload(), MaxOS::net::InternetProtocolHandler::sendInternetProtocolPacket(), and MaxOS::net::TransmissionControlProtocolHandler::sendTransmissionControlProtocolPacket()\&.
.SS "uint8_t typeOfService"

.PP
Definition at line 19 of file ipv4\&.h\&.
.PP
Referenced by MaxOS::net::InternetProtocolHandler::sendInternetProtocolPacket()\&.
.SS "uint8_t version"

.PP
Definition at line 18 of file ipv4\&.h\&.
.PP
Referenced by MaxOS::hardwarecommunication::LocalAPIC::init(), and MaxOS::net::InternetProtocolHandler::sendInternetProtocolPacket()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
