.TH "MaxOS::drivers::console::ConsoleStream" 3 "Sat Mar 29 2025" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MaxOS::drivers::console::ConsoleStream \- A stream that can be used to write to a console\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <console\&.h>\fP
.PP
Inherits \fBMaxOS::common::OutputStream\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBConsoleStream\fP (\fBConsole\fP *)"
.br
.RI "____ \fBConsole\fP Stream ____/// "
.ti -1c
.RI "\fB~ConsoleStream\fP ()"
.br
.ti -1c
.RI "void \fBwrite_char\fP (char c) override"
.br
.RI "write a character to the console stream "
.ti -1c
.RI "void \fBset_cursor\fP (uint16_t x, uint16_t y)"
.br
.RI "Set the m_position of the cursor\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "uint16_t \fBm_cursor_x\fP { 0 }"
.br
.ti -1c
.RI "uint16_t \fBm_cursor_y\fP { 0 }"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBConsole\fP * \fBm_console\fP"
.br
.ti -1c
.RI "\fBcommon::ConsoleColour\fP \fBm_foreground\fP"
.br
.ti -1c
.RI "\fBcommon::ConsoleColour\fP \fBm_background\fP"
.br
.ti -1c
.RI "bool \fBis_ansi\fP = false"
.br
.in -1c
.SH "Detailed Description"
.PP 
A stream that can be used to write to a console\&. 
.PP
Definition at line 92 of file console\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ConsoleStream::ConsoleStream (\fBConsole\fP * console)"

.PP
____ \fBConsole\fP Stream ____/// 
.PP
Definition at line 423 of file console\&.cpp\&.
.PP
.nf
424 : m_console(console)
425 {
426 
427 }
.fi
.SS "ConsoleStream::~ConsoleStream ()"

.PP
Definition at line 429 of file console\&.cpp\&.
.PP
.nf
429                               {
430 
431 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void ConsoleStream::set_cursor (uint16_t x, uint16_t y)"

.PP
Set the m_position of the cursor\&. 
.PP
\fBParameters\fP
.RS 4
\fIx\fP The x coordinate of the cursor 
.br
\fIy\fP The y coordinate of the cursor 
.RE
.PP

.PP
Definition at line 526 of file console\&.cpp\&.
.PP
.nf
526                                                      {
527 
528     // Set the x and y coordinates
529     m_cursor_x = x;
530     m_cursor_y = y;
531 }
.fi
.PP
References m_cursor_x, m_cursor_y, MaxOS::drivers::peripherals::x, and MaxOS::drivers::peripherals::y\&.
.PP
Referenced by kernelMain()\&.
.SS "void ConsoleStream::write_char (char c)\fC [override]\fP, \fC [virtual]\fP"

.PP
write a character to the console stream 
.PP
\fBParameters\fP
.RS 4
\fIc\fP The character to write 
.RE
.PP

.PP
Reimplemented from \fBMaxOS::common::OutputStream\fP\&.
.PP
Definition at line 438 of file console\&.cpp\&.
.PP
.nf
438                                      {
439 
440     uint16_t spaces = 0;
441 
442     // If the character placement is more than the width of the console go on a new line
443     if(m_cursor_x >= m_console->width()) {
444 
445         // Go to the start of the next line
446         m_cursor_x = 0;
447 
448         // Increment the y coordinate but if it is more than the height of the console scroll the console
449         if(++m_cursor_y >= m_console->height()){
450 
451             // Scroll the console
452             m_console->scroll_up();
453 
454             // Decrement the y coordinate
455             m_cursor_y = m_console->height()-1;
456         }
457     }
458 
459     // Check if the character is an ANSI escape code
460     if(c == '\033') is_ansi = true;
461 
462     // Handle the character
463     switch (c) {
464         // New line
465         case '\n':
466             // Increment the y coordinate but if it is more than the height of the console scroll the console
467             if(++m_cursor_y >= m_console->height()){
468 
469                 // Scroll the console
470                 m_console->scroll_up();
471 
472                 // Decrement the y coordinate
473                 m_cursor_y = m_console->height()-1;
474             }
475 
476             // don't break here, we want to go to the next case because of the \r
477             [[fallthrough]];
478 
479         // Carriage return
480         case '\r':
481             // Go to the start of the next line
482             m_cursor_x = 0;
483             break;
484 
485         // Null Terminator
486         case '\0':
487             break;
488 
489         // Backspace
490         case '\b':
491             // Decrement the x coordinate
492             m_cursor_x--;
493             break;
494 
495         // Tab
496         case '\t':
497             // Figure out how many spaces to the next tab stop
498             spaces = 8 - (m_cursor_x % 8);
499             for(uint16_t i = 0; i < spaces; i++)
500                 write_char(' ');
501             break;
502 
503         default:
504             // Put the character on the console
505             m_console->put_character(m_cursor_x, m_cursor_y, c);
506 
507             // Increment the x coordinate
508             if(!is_ansi)
509               m_cursor_x++;
510 
511             break;
512 
513     }
514 
515     // Check if the ANSI code is complete
516     if(c == 'm') is_ansi = false;
517 
518 }
.fi
.PP
References MaxOS::drivers::peripherals::c, MaxOS::drivers::console::Console::height(), MaxOS::drivers::peripherals::i, is_ansi, m_console, m_cursor_x, m_cursor_y, MaxOS::drivers::console::Console::put_character(), MaxOS::drivers::console::Console::scroll_up(), and MaxOS::drivers::console::Console::width()\&.
.SH "Member Data Documentation"
.PP 
.SS "bool MaxOS::drivers::console::ConsoleStream::is_ansi = false\fC [protected]\fP"

.PP
Definition at line 99 of file console\&.h\&.
.PP
Referenced by write_char()\&.
.SS "\fBcommon::ConsoleColour\fP MaxOS::drivers::console::ConsoleStream::m_background\fC [protected]\fP"

.PP
Definition at line 98 of file console\&.h\&.
.SS "\fBConsole\fP* MaxOS::drivers::console::ConsoleStream::m_console\fC [protected]\fP"

.PP
Definition at line 95 of file console\&.h\&.
.PP
Referenced by write_char()\&.
.SS "uint16_t MaxOS::drivers::console::ConsoleStream::m_cursor_x { 0 }"

.PP
Definition at line 102 of file console\&.h\&.
.PP
Referenced by set_cursor(), and write_char()\&.
.SS "uint16_t MaxOS::drivers::console::ConsoleStream::m_cursor_y { 0 }"

.PP
Definition at line 103 of file console\&.h\&.
.PP
Referenced by set_cursor(), and write_char()\&.
.SS "\fBcommon::ConsoleColour\fP MaxOS::drivers::console::ConsoleStream::m_foreground\fC [protected]\fP"

.PP
Definition at line 97 of file console\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
