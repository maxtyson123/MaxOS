.TH "MaxOS::system::GlobalDescriptorTable" 3 "Sun Oct 13 2024" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MaxOS::system::GlobalDescriptorTable \- Sets up the GDT in the \fBCPU\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gdt\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBGlobalDescriptorTable\fP ()"
.br
.ti -1c
.RI "\fB~GlobalDescriptorTable\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Sets up the GDT in the \fBCPU\fP\&. 
.PP
Definition at line 28 of file gdt\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "GlobalDescriptorTable::GlobalDescriptorTable ()"

.PP
Definition at line 11 of file gdt\&.cpp\&.
.PP
.nf
12 {
13 
14    // Null descriptor
15     m_gdt[0] = 0;
16 
17     // Kernel code segment descriptor
18     uint64_t kernel_code_segment_descriptor = 0;
19     kernel_code_segment_descriptor |= 0b1011 << 8; // Type of selector
20     kernel_code_segment_descriptor |= 1 << 12;     // Not a system descriptor
21     kernel_code_segment_descriptor |= 0 << 13;     // Privilege level 0
22     kernel_code_segment_descriptor |= 1 << 15;     // Present
23     kernel_code_segment_descriptor |= 1 << 21;     // Long mode
24     m_gdt[1] = kernel_code_segment_descriptor << 32;
25 
26     // Kernel data segment descriptor
27     uint64_t kernel_data_segment_descriptor = 0;
28     kernel_data_segment_descriptor |= 0b0011 << 8; // Type of selector
29     kernel_data_segment_descriptor |= 1 << 12;     // Not a system descriptor
30     kernel_data_segment_descriptor |= 0 << 13;     // Privilege level 0
31     kernel_data_segment_descriptor |= 1 << 15;     // Present
32     kernel_data_segment_descriptor |= 1 << 21;     // Long mode
33     m_gdt[2] = kernel_data_segment_descriptor << 32;
34 
35     // User code segment descriptor (Change the privilege level to 3)
36     uint64_t user_code_segment_descriptor = kernel_code_segment_descriptor | (3 << 13);
37     m_gdt[3] = user_code_segment_descriptor;
38 
39     // User data segment descriptor (Change the privilege level to 3)
40     uint64_t user_data_segment_descriptor = kernel_data_segment_descriptor | (3 << 13);
41     m_gdt[4] = user_data_segment_descriptor;
42 
43     _kprintf("Created GDT entries\n");
44 
45     // Store the GDT in the GDTR
46     GDTR gdtr = {
47         \&.limit = 5 * sizeof(uint64_t) - 1,
48         \&.address = (uint64_t)m_gdt
49     };
50 
51 
52     // TODO: This is done in assembly but would be nice to do here
53 //    // Load the GDTR
54 //    asm volatile("lgdt %0" : : "m" (gdtr));
55 //
56 //    _kprintf("Loaded GDT\n");
57 //
58 //    // Reload the segment registers
59 //    asm volatile("\
60 //        mov $0x10, %ax \n\
61 //        mov %ax, %ds \n\
62 //        mov %ax, %es \n\
63 //        mov %ax, %fs \n\
64 //        mov %ax, %gs \n\
65 //        mov %ax, %ss \n\
66 //        \n\
67 //        pop %rdi \n\
68 //        push $0x8 \n\
69 //        push %rdi \n\
70 //    ");
71 
72 
73     _kprintf("Reloaded segment registers\n");
74 
75 }
.fi
.PP
References _kprintf, address, and MaxOS::system::GDTR::limit\&.
.SS "GlobalDescriptorTable::~GlobalDescriptorTable ()"

.PP
Definition at line 77 of file gdt\&.cpp\&.
.PP
.nf
78 {
79 }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
