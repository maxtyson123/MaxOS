.TH "MaxOS::system::Multiboot" 3 "Sun Oct 13 2024" "Version 0.1" "Max OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MaxOS::system::Multiboot
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <multiboot\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMultiboot\fP (unsigned long addr)"
.br
.ti -1c
.RI "\fB~Multiboot\fP ()"
.br
.ti -1c
.RI "\fBmultiboot_tag_framebuffer\fP * \fBget_framebuffer\fP ()"
.br
.ti -1c
.RI "\fBmultiboot_tag_basic_meminfo\fP * \fBget_basic_meminfo\fP ()"
.br
.ti -1c
.RI "\fBmultiboot_tag_string\fP * \fBget_bootloader_name\fP ()"
.br
.ti -1c
.RI "\fBmultiboot_tag_mmap\fP * \fBget_mmap\fP ()"
.br
.ti -1c
.RI "\fBmultiboot_tag_old_acpi\fP * \fBget_old_acpi\fP ()"
.br
.ti -1c
.RI "\fBmultiboot_tag_new_acpi\fP * \fBget_new_acpi\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBmultiboot_tag_framebuffer\fP * \fBm_framebuffer\fP"
.br
.ti -1c
.RI "\fBmultiboot_tag_basic_meminfo\fP * \fBm_basic_meminfo\fP"
.br
.ti -1c
.RI "\fBmultiboot_tag_string\fP * \fBm_bootloader_name\fP"
.br
.ti -1c
.RI "\fBmultiboot_tag_mmap\fP * \fBm_mmap\fP"
.br
.ti -1c
.RI "\fBmultiboot_tag_old_acpi\fP * \fBm_old_acpi\fP"
.br
.ti -1c
.RI "\fBmultiboot_tag_new_acpi\fP * \fBm_new_acpi\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 420 of file multiboot\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Multiboot::Multiboot (unsigned long addr)"

.PP
Definition at line 13 of file multiboot\&.cpp\&.
.PP
.nf
13                                        {
14 
15   _kprintf("Multiboot\n");
16 
17     // Loop through the tags and load them
18     struct multiboot_tag *tag;
19     for(tag=(struct multiboot_tag *)(addr + MemoryManager::s_higher_half_kernel_offset + 8); tag->type != MULTIBOOT_TAG_TYPE_END; tag = (struct multiboot_tag *) ((multiboot_uint8_t *) tag + ((tag->size + 7) & ~7))) {
20 
21       switch (tag -> type) {
22           case MULTIBOOT_TAG_TYPE_FRAMEBUFFER:
23               m_framebuffer = (multiboot_tag_framebuffer *)tag;
24               break;
25 
26           case MULTIBOOT_TAG_TYPE_BASIC_MEMINFO:
27               m_basic_meminfo = (multiboot_tag_basic_meminfo *)tag;
28               break;
29 
30           case MULTIBOOT_TAG_TYPE_BOOT_LOADER_NAME:
31               m_bootloader_name = (multiboot_tag_string *)tag;
32               _kprintf("Bootloader: %s\n", m_bootloader_name->string);
33               break;
34 
35           case MULTIBOOT_TAG_TYPE_BOOTDEV:
36             multiboot_tag_bootdev *bootdev;
37             bootdev = (multiboot_tag_bootdev *)tag;
38             _kprintf("Boot device: 0x%x, 0x%x, 0x%x of type 0x%x\n",
39                     (unsigned) bootdev->biosdev, (unsigned) bootdev->slice,
40                     (unsigned) bootdev->part, (unsigned) bootdev->type);
41 
42           case MULTIBOOT_TAG_TYPE_MMAP:
43 
44             // If there is not already a mmap tag, set it
45             if (m_mmap == nullptr)
46                 m_mmap = (multiboot_tag_mmap *)tag;
47 
48             break;
49 
50           case MULTIBOOT_TAG_TYPE_ACPI_OLD:
51                 m_old_acpi = (multiboot_tag_old_acpi *)tag;
52                 break;
53 
54 
55           case MULTIBOOT_TAG_TYPE_ACPI_NEW:
56                 m_new_acpi = (multiboot_tag_new_acpi *)tag;
57                 break;
58       }
59     }
60 }
.fi
.PP
References _kprintf, multiboot_tag_bootdev::biosdev, MULTIBOOT_TAG_TYPE_ACPI_NEW, MULTIBOOT_TAG_TYPE_ACPI_OLD, MULTIBOOT_TAG_TYPE_BASIC_MEMINFO, MULTIBOOT_TAG_TYPE_BOOT_LOADER_NAME, MULTIBOOT_TAG_TYPE_BOOTDEV, MULTIBOOT_TAG_TYPE_END, MULTIBOOT_TAG_TYPE_FRAMEBUFFER, MULTIBOOT_TAG_TYPE_MMAP, multiboot_tag_bootdev::part, multiboot_tag::size, multiboot_tag_bootdev::slice, type, multiboot_tag::type, and multiboot_tag_bootdev::type\&.
.SS "Multiboot::~Multiboot ()"

.PP
Definition at line 62 of file multiboot\&.cpp\&.
.PP
.nf
62                       {
63 
64 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "\fBmultiboot_tag_basic_meminfo\fP * Multiboot::get_basic_meminfo ()"

.PP
Definition at line 73 of file multiboot\&.cpp\&.
.PP
.nf
73                                                           {
74 
75     return m_basic_meminfo;
76 
77 }
.fi
.PP
Referenced by MaxOS::memory::PhysicalMemoryManager::PhysicalMemoryManager()\&.
.SS "\fBmultiboot_tag_string\fP * Multiboot::get_bootloader_name ()"

.PP
Definition at line 79 of file multiboot\&.cpp\&.
.PP
.nf
79                                                      {
80 
81     return m_bootloader_name;
82 
83 }
.fi
.SS "\fBmultiboot_tag_framebuffer\fP * Multiboot::get_framebuffer ()"

.PP
Definition at line 67 of file multiboot\&.cpp\&.
.PP
.nf
67                                                       {
68 
69     return m_framebuffer;
70 
71 }
.fi
.PP
Referenced by kernelMain()\&.
.SS "\fBmultiboot_tag_mmap\fP * Multiboot::get_mmap ()"

.PP
Definition at line 85 of file multiboot\&.cpp\&.
.PP
.nf
85                                         {
86 
87     return m_mmap;
88 
89 }
.fi
.PP
Referenced by MaxOS::memory::PhysicalMemoryManager::PhysicalMemoryManager()\&.
.SS "\fBmultiboot_tag_new_acpi\fP * Multiboot::get_new_acpi ()"

.PP
Definition at line 97 of file multiboot\&.cpp\&.
.PP
.nf
97                                                 {
98 
99   return m_new_acpi;
100 }
.fi
.PP
Referenced by MaxOS::hardwarecommunication::AdvancedConfigurationAndPowerInterface::AdvancedConfigurationAndPowerInterface()\&.
.SS "\fBmultiboot_tag_old_acpi\fP * Multiboot::get_old_acpi ()"

.PP
Definition at line 91 of file multiboot\&.cpp\&.
.PP
.nf
91                                                 {
92 
93   return m_old_acpi;
94 }
.fi
.PP
Referenced by MaxOS::hardwarecommunication::AdvancedConfigurationAndPowerInterface::AdvancedConfigurationAndPowerInterface()\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBmultiboot_tag_basic_meminfo\fP* MaxOS::system::Multiboot::m_basic_meminfo\fC [protected]\fP"

.PP
Definition at line 423 of file multiboot\&.h\&.
.SS "\fBmultiboot_tag_string\fP* MaxOS::system::Multiboot::m_bootloader_name\fC [protected]\fP"

.PP
Definition at line 424 of file multiboot\&.h\&.
.SS "\fBmultiboot_tag_framebuffer\fP* MaxOS::system::Multiboot::m_framebuffer\fC [protected]\fP"

.PP
Definition at line 422 of file multiboot\&.h\&.
.SS "\fBmultiboot_tag_mmap\fP* MaxOS::system::Multiboot::m_mmap\fC [protected]\fP"

.PP
Definition at line 425 of file multiboot\&.h\&.
.SS "\fBmultiboot_tag_new_acpi\fP* MaxOS::system::Multiboot::m_new_acpi\fC [protected]\fP"

.PP
Definition at line 427 of file multiboot\&.h\&.
.SS "\fBmultiboot_tag_old_acpi\fP* MaxOS::system::Multiboot::m_old_acpi\fC [protected]\fP"

.PP
Definition at line 426 of file multiboot\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Max OS from the source code\&.
